{"version":3,"sources":["../../../src/lib/series/LineSeries.js"],"names":["LineSeries","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","highlightOnHover","yAccessor","hoverTolerance","mouseXY","currentItem","xScale","plotData","chartConfig","yScale","origin","xAccessor","x","y","radius","invert","left","right","cy","cx","hovering1","Math","pow","l","r","x1","y1","x2","y2","m","b","desiredY","round","hovering2","ctx","stroke","strokeWidth","hoverStrokeWidth","defined","strokeDasharray","interpolation","connectNulls","hovering","lineWidth","strokeStyle","setLineDash","split","dataSeries","d","curve","beginPath","context","fill","className","hoverProps","drawOn","canvasToDraw","onClick","onDoubleClick","onContextMenu","propTypes","string","number","func","oneOf","bool","defaultProps","isNaN","e","console","log"],"mappings":"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","file":"LineSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line as d3Line } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas, getMouseCanvas } from \"../GenericComponent\";\n\nimport { isDefined, getClosestItemIndexes, strokeDashTypes, getStrokeDasharray } from \"../utils\";\n\nclass LineSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\t// console.log(\"HERE\")\n\t\tconst { highlightOnHover, yAccessor, hoverTolerance } = this.props;\n\n\t\tif (!highlightOnHover) return false;\n\n\t\tconst { mouseXY, currentItem, xScale, plotData } = moreProps;\n\t\tconst { chartConfig: { yScale, origin } } = moreProps;\n\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst [x, y] = mouseXY;\n\t\tconst radius = hoverTolerance;\n\n\t\tconst { left, right } = getClosestItemIndexes(plotData, xScale.invert(x), xAccessor);\n\t\tif (left === right) {\n\t\t\tconst cy = yScale(yAccessor(currentItem)) + origin[1];\n\t\t\tconst cx = xScale(xAccessor(currentItem)) + origin[0];\n\n\t\t\tconst hovering1 = Math.pow(x - cx, 2) + Math.pow(y - cy, 2) < Math.pow(radius, 2);\n\n\t\t\treturn hovering1;\n\t\t} else {\n\t\t\tconst l = plotData[left];\n\t\t\tconst r = plotData[right];\n\t\t\tconst x1 = xScale(xAccessor(l)) + origin[0];\n\t\t\tconst y1 = yScale(yAccessor(l)) + origin[1];\n\t\t\tconst x2 = xScale(xAccessor(r)) + origin[0];\n\t\t\tconst y2 = yScale(yAccessor(r)) + origin[1];\n\n\t\t\t// y = m * x + b\n\t\t\tconst m /* slope */ = (y2 - y1) / (x2 - x1);\n\t\t\tconst b /* y intercept */ = -1 * m * x1 + y1;\n\n\t\t\tconst desiredY = Math.round(m * x + b);\n\n\t\t\tconst hovering2 = y >= desiredY - radius && y <= desiredY + radius;\n\n\t\t\treturn hovering2;\n\t\t}\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tyAccessor, stroke, strokeWidth, hoverStrokeWidth,\n\t\t\tdefined, strokeDasharray, interpolation\n\t\t} = this.props;\n\n\t\tconst { connectNulls } = this.props;\n\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData, hovering } = moreProps;\n\n\t\tctx.lineWidth = hovering ? hoverStrokeWidth : strokeWidth;\n\n\t\tctx.strokeStyle = stroke;\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\n\t\tconst dataSeries = d3Line()\n\t\t\t.x(d => xScale(xAccessor(d)))\n\t\t\t.y(d => yScale(yAccessor(d)));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tdataSeries.curve(interpolation);\n\t\t}\n\t\tif (!connectNulls) {\n\t\t\tdataSeries.defined(d => defined(yAccessor(d)));\n\t\t}\n\n\t\tctx.beginPath();\n\t\tdataSeries.context(ctx)(plotData);\n\t\tctx.stroke();\n\t\t/*\n\t\tlet points = [];\n\t\tfor (let i = 0; i < plotData.length; i++) {\n\t\t\tconst d = plotData[i];\n\t\t\tif (defined(yAccessor(d), i)) {\n\t\t\t\tconst [x, y] = [xScale(xAccessor(d)), yScale(yAccessor(d))];\n\n\t\t\t\tpoints.push([x, y]);\n\t\t\t} else if (points.length) {\n\t\t\t\tsegment(points, ctx);\n\t\t\t\tpoints = connectNulls ? points : [];\n\t\t\t}\n\t\t}\n\n\t\tif (points.length) segment(points, ctx);*/\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor, stroke, strokeWidth, hoverStrokeWidth, defined, strokeDasharray } = this.props;\n\t\tconst { connectNulls } = this.props;\n\t\tconst { interpolation } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, hovering } = moreProps;\n\n\t\tconst dataSeries = d3Line()\n\t\t\t.x(d => xScale(xAccessor(d)))\n\t\t\t.y(d => yScale(yAccessor(d)));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tdataSeries.curve(interpolation);\n\t\t}\n\t\tif (!connectNulls) {\n\t\t\tdataSeries.defined(d => defined(yAccessor(d)));\n\t\t}\n\t\tconst d = dataSeries(plotData);\n\n\t\tconst { fill, className } = this.props;\n\n\t\treturn <path className={`${className} ${stroke ? \"\" : \" line-stroke\"}`}\n\t\t\td={d}\n\t\t\tstroke={stroke}\n\t\t\tstrokeWidth={hovering ? hoverStrokeWidth : strokeWidth}\n\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\tfill={fill}\n\t\t/>;\n\t}\n\trender() {\n\t\tconst { highlightOnHover } = this.props;\n\t\tconst hoverProps = highlightOnHover\n\t\t\t? {\n\t\t\t\tisHover: this.isHover,\n\t\t\t\tdrawOn: [\"mousemove\", \"pan\"],\n\t\t\t\tcanvasToDraw: getMouseCanvas\n\t\t\t}\n\t\t\t: {\n\t\t\t\tdrawOn: [\"pan\"],\n\t\t\t\tcanvasToDraw: getAxisCanvas\n\t\t\t};\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tonClickWhenHover={this.props.onClick}\n\t\t\tonDoubleClickWhenHover={this.props.onDoubleClick}\n\t\t\tonContextMenuWhenHover={this.props.onContextMenu}\n\t\t\t{...hoverProps}\n\t\t/>;\n\t}\n}\n\n/*\nfunction segment(points, ctx) {\n\tctx.beginPath();\n\n\tconst [x, y] = first(points);\n\tctx.moveTo(x, y);\n\tfor (let i = 1; i < points.length; i++) {\n\t\tconst [x1, y1] = points[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tctx.stroke();\n}\n*/\n\nLineSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\tstroke: PropTypes.string,\n\thoverStrokeWidth: PropTypes.number,\n\tfill: PropTypes.string,\n\tdefined: PropTypes.func,\n\thoverTolerance: PropTypes.number,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\thighlightOnHover: PropTypes.bool,\n\tonClick: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\tyAccessor: PropTypes.func,\n\tconnectNulls: PropTypes.bool,\n\tinterpolation: PropTypes.func,\n};\n\nLineSeries.defaultProps = {\n\tclassName: \"line \",\n\tstrokeWidth: 1,\n\thoverStrokeWidth: 4,\n\tfill: \"none\",\n\tstroke: \"#4682B4\",\n\tstrokeDasharray: \"Solid\",\n\tdefined: d => !isNaN(d),\n\thoverTolerance: 6,\n\thighlightOnHover: false,\n\tconnectNulls: false,\n\tonClick: function(e) { console.log(\"Click\", e); },\n\tonDoubleClick: function(e) { console.log(\"Double Click\", e); },\n\tonContextMenu: function(e) { console.log(\"Right Click\", e); },\n};\n\nexport default LineSeries;\n"]}