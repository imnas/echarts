{"version":3,"sources":["../../../../src/lib/indicator/baseIndicator.js"],"names":["overlayColors","i","id","accessor","stroke","fill","echo","type","baseIndicator","x","arguments","length"],"mappings":"AAAA;;AAEA,SAASA,aAAT,QAA8B,UAA9B;;AAEA,IAAIC,IAAI,CAAR;;AAEA,eAAe,YAAW;;AAEzB,KAAIC,KAAKD,GAAT;AAAA,KAAcE,iBAAd;AAAA,KAAwBC,eAAxB;AAAA,KAAgCC,aAAhC;AAAA,KAAsCC,aAAtC;AAAA,KAA4CC,aAA5C;;AAEA,UAASC,aAAT,GAAyB,CACxB;;AAEDA,eAAcN,EAAd,GAAmB,UAASO,CAAT,EAAY;AAC9B,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOT,EAAP;AACvBA,OAAKO,CAAL;AACA,SAAOD,aAAP;AACA,EAJD;AAKAA,eAAcL,QAAd,GAAyB,UAASM,CAAT,EAAY;AACpC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOR,QAAP;AACvBA,aAAWM,CAAX;AACA,SAAOD,aAAP;AACA,EAJD;AAKAA,eAAcJ,MAAd,GAAuB,UAASK,CAAT,EAAY;AAClC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO,CAACP,MAAD,GAAUA,SAASJ,cAAcE,EAAd,CAAnB,GAAuCE,MAA9C;AACvBA,WAASK,CAAT;AACA,SAAOD,aAAP;AACA,EAJD;AAKAA,eAAcH,IAAd,GAAqB,UAASI,CAAT,EAAY;AAChC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO,CAACN,IAAD,GAAQA,OAAOL,cAAcE,EAAd,CAAf,GAAmCG,IAA1C;AACvBA,SAAOI,CAAP;AACA,SAAOD,aAAP;AACA,EAJD;AAKAA,eAAcF,IAAd,GAAqB,UAASG,CAAT,EAAY;AAChC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOL,IAAP;AACvBA,SAAOG,CAAP;AACA,SAAOD,aAAP;AACA,EAJD;AAKAA,eAAcD,IAAd,GAAqB,UAASE,CAAT,EAAY;AAChC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOJ,IAAP;AACvBA,SAAOE,CAAP;AACA,SAAOD,aAAP;AACA,EAJD;AAKA,QAAOA,aAAP;AACA","file":"baseIndicator.js","sourcesContent":["\"use strict\";\n\nimport { overlayColors } from \"../utils\";\n\nlet i = 0;\n\nexport default function() {\n\n\tlet id = i++, accessor, stroke, fill, echo, type;\n\n\tfunction baseIndicator() {\n\t}\n\n\tbaseIndicator.id = function(x) {\n\t\tif (!arguments.length) return id;\n\t\tid = x;\n\t\treturn baseIndicator;\n\t};\n\tbaseIndicator.accessor = function(x) {\n\t\tif (!arguments.length) return accessor;\n\t\taccessor = x;\n\t\treturn baseIndicator;\n\t};\n\tbaseIndicator.stroke = function(x) {\n\t\tif (!arguments.length) return !stroke ? stroke = overlayColors(id) : stroke;\n\t\tstroke = x;\n\t\treturn baseIndicator;\n\t};\n\tbaseIndicator.fill = function(x) {\n\t\tif (!arguments.length) return !fill ? fill = overlayColors(id) : fill;\n\t\tfill = x;\n\t\treturn baseIndicator;\n\t};\n\tbaseIndicator.echo = function(x) {\n\t\tif (!arguments.length) return echo;\n\t\techo = x;\n\t\treturn baseIndicator;\n\t};\n\tbaseIndicator.type = function(x) {\n\t\tif (!arguments.length) return type;\n\t\ttype = x;\n\t\treturn baseIndicator;\n\t};\n\treturn baseIndicator;\n}"]}