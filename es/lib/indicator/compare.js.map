{"version":3,"sources":["../../../../src/lib/indicator/compare.js"],"names":["rebind","merge","compare","baseIndicator","ALGORITHM_TYPE","base","type","accessor","d","underlyingAlgorithm","mergedAlgorithm","algorithm","datum","indicator","data","options","Error"],"mappings":"AAAA;;AAEA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,UAA9B;;AAEA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,iBAAiB,SAAvB;;AAEA,eAAe,YAAW;;AAEzB,KAAMC,OAAOF,gBACXG,IADW,CACNF,cADM,EAEXG,QAFW,CAEF;AAAA,SAAKC,EAAEN,OAAP;AAAA,EAFE,CAAb;;AAIA,KAAMO,sBAAsBP,SAA5B;;AAEA,KAAMQ,kBAAkBT,QACtBU,SADsB,CACZF,mBADY,EAEtBR,KAFsB,CAEhB,UAACW,KAAD,EAAQC,SAAR,EAAsB;AAAED,QAAMV,OAAN,GAAgBW,SAAhB;AAA4B,EAFpC,CAAxB;;AAIA,KAAMA,YAAY,SAAZA,SAAY,CAASC,IAAT,EAA0C;AAAA,MAA3BC,OAA2B,uEAAjB,EAAEd,OAAO,IAAT,EAAiB;;AAC3D,MAAIc,QAAQd,KAAZ,EAAmB;AAClB,OAAI,CAACI,KAAKE,QAAL,EAAL,EAAsB,MAAM,IAAIS,KAAJ,yBAAgCZ,cAAhC,yBAAN;AACtB,UAAOM,gBAAgBI,IAAhB,CAAP;AACA;AACD,SAAOL,oBAAoBK,IAApB,CAAP;AACA,EAND;;AAQAd,QAAOa,SAAP,EAAkBR,IAAlB,EAAwB,IAAxB,EAA8B,UAA9B,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,MAApE;AACAL,QAAOa,SAAP,EAAkBJ,mBAAlB,EAAuC,SAAvC;AACAT,QAAOa,SAAP,EAAkBH,eAAlB,EAAmC,OAAnC;;AAEA,QAAOG,SAAP;AACA","file":"compare.js","sourcesContent":["\"use strict\";\n\nimport { rebind, merge } from \"../utils\";\n\nimport { compare } from \"../calculator\";\n\nimport baseIndicator from \"./baseIndicator\";\n\nconst ALGORITHM_TYPE = \"Compare\";\n\nexport default function() {\n\n\tconst base = baseIndicator()\n\t\t.type(ALGORITHM_TYPE)\n\t\t.accessor(d => d.compare);\n\n\tconst underlyingAlgorithm = compare();\n\n\tconst mergedAlgorithm = merge()\n\t\t.algorithm(underlyingAlgorithm)\n\t\t.merge((datum, indicator) => { datum.compare = indicator; });\n\n\tconst indicator = function(data, options = { merge: true }) {\n\t\tif (options.merge) {\n\t\t\tif (!base.accessor()) throw new Error(`Set an accessor to ${ALGORITHM_TYPE} before calculating`);\n\t\t\treturn mergedAlgorithm(data);\n\t\t}\n\t\treturn underlyingAlgorithm(data);\n\t};\n\n\trebind(indicator, base, \"id\", \"accessor\", \"stroke\", \"fill\", \"echo\", \"type\");\n\trebind(indicator, underlyingAlgorithm, \"options\");\n\trebind(indicator, mergedAlgorithm, \"merge\");\n\n\treturn indicator;\n}\n"]}