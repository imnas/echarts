{"version":3,"sources":["../../../../src/lib/tooltip/StochasticTooltip.js"],"names":["format","React","Component","PropTypes","displayValuesFor","GenericChartComponent","functor","ToolTipText","ToolTipTSpanLabel","StochasticTooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","label","className","options","appearance","labelFill","chartConfig","width","height","currentItem","stroke","stochastic","K","D","originProp","origin","x","y","kLine","windowSize","kWindowSize","dLine","dWindowSize","propTypes","oneOfType","array","func","isRequired","string","number","shape","defaultProps"],"mappings":"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","file":"StochasticTooltip.js","sourcesContent":["\"use strict\";\n\nimport { format } from \"d3-format\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport { functor } from \"../utils\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nclass StochasticTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { onClick, fontFamily, fontSize, yAccessor, displayFormat, label } = this.props;\n\t\tconst { className, options, appearance, labelFill } = this.props;\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst { stroke } = appearance;\n\t\tconst stochastic = currentItem && yAccessor(currentItem);\n\n\t\tconst K = (stochastic && stochastic.K && displayFormat(stochastic.K)) || \"n/a\";\n\t\tconst D = (stochastic && stochastic.D && displayFormat(stochastic.D)) || \"n/a\";\n\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\treturn (\n\t\t\t<g className={className} transform={`translate(${ x }, ${ y })`} onClick={onClick}>\n\t\t\t\t<ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{`${ label } %K(`}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.kLine}>{`${options.windowSize}, ${options.kWindowSize}`}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.kLine}>{K}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}> %D (</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.dLine}>{options.dWindowSize}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.dLine}>{D}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nStochasticTooltip.propTypes = {\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]).isRequired,\n\tclassName: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tlabelFill: PropTypes.string,\n\n\tonClick: PropTypes.func,\n\tyAccessor: PropTypes.func.isRequired,\n\toptions: PropTypes.shape({\n\t\twindowSize: PropTypes.number.isRequired,\n\t\tkWindowSize: PropTypes.number.isRequired,\n\t\tdWindowSize: PropTypes.number.isRequired,\n\t}).isRequired,\n\tappearance: PropTypes.shape({\n\t\tstroke: {\n\t\t\tdLine: PropTypes.string.isRequired,\n\t\t\tkLine: PropTypes.string.isRequired,\n\t\t}.isRequired,\n\t}).isRequired,\n\tdisplayFormat: PropTypes.func.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tlabel: PropTypes.string.isRequired,\n};\n\nStochasticTooltip.defaultProps = {\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\tclassName: \"react-stockcharts-tooltip\",\n\tlabel: \"STO\",\n};\n\nexport default StochasticTooltip;\n"]}