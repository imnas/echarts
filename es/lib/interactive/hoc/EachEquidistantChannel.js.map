{"version":3,"sources":["../../../../../src/lib/interactive/hoc/EachEquidistantChannel.js"],"names":["React","Component","PropTypes","isDefined","noop","getXValue","saveNodeType","isHover","ClickableCircle","ChannelWithArea","HoverTextNearMouse","EachEquidistantChannel","props","handleLine1Edge1Drag","bind","handleLine1Edge2Drag","handleDragStart","handleChannelDrag","handleChannelHeightChange","getEdgeCircle","handleHover","nodes","state","hover","moreProps","hovering","setState","startXY","endXY","dy","dragStart","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","newX1Value","newY1Value","invert","newX2Value","newY2Value","newDy","xy","dragHandler","cursor","fill","edge","appearance","edgeStroke","edgeStrokeWidth","r","selected","onDragComplete","interactive","hoverText","edgeFill","edgeFill2","stroke","strokeWidth","strokeOpacity","fillOpacity","hoverTextEnabled","enable","restHoverTextProps","hoverHandler","onHover","onUnHover","line1Edge","line2Edge","propTypes","arrayOf","number","isRequired","bool","object","shape","string","func","defaultProps","yDisplayFormat","d","toFixed"],"mappings":"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","file":"EachEquidistantChannel.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, noop } from \"../../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\nimport { saveNodeType, isHover } from \"../utils\";\n\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport ChannelWithArea from \"../components/ChannelWithArea\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachEquidistantChannel extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleLine1Edge1Drag = this.handleLine1Edge1Drag.bind(this);\n\t\tthis.handleLine1Edge2Drag = this.handleLine1Edge2Drag.bind(this);\n\n\t\tthis.handleDragStart = this.handleDragStart.bind(this);\n\t\tthis.handleChannelDrag = this.handleChannelDrag.bind(this);\n\n\t\tthis.handleChannelHeightChange = this.handleChannelHeightChange.bind(this);\n\n\t\tthis.getEdgeCircle = this.getEdgeCircle.bind(this);\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\thandleDragStart() {\n\t\tconst {\n\t\t\tstartXY, endXY, dy,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tstartXY, endXY, dy,\n\t\t};\n\t}\n\thandleChannelDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tstartXY, endXY,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(startXY[0]);\n\t\tconst y1 = yScale(startXY[1]);\n\t\tconst x2 = xScale(endXY[0]);\n\t\tconst y2 = yScale(endXY[1]);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\t// const newDy = newY2Value - endXY[1] + this.dragStart.dy;\n\n\t\tonDrag(index, {\n\t\t\tstartXY: [newX1Value, newY1Value],\n\t\t\tendXY: [newX2Value, newY2Value],\n\t\t\tdy: this.dragStart.dy,\n\t\t});\n\t}\n\thandleLine1Edge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tstartXY,\n\t\t} = this.dragStart;\n\n\t\tconst {\n\t\t\tstartPos, mouseXY, xAccessor,\n\t\t\txScale, fullData,\n\t\t\tchartConfig: { yScale }\n\t\t} = moreProps;\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst x1 = xScale(startXY[0]);\n\t\tconst y1 = yScale(startXY[1]);\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\n\t\tonDrag(index, {\n\t\t\tstartXY: [newX1Value, newY1Value],\n\t\t\tendXY: this.dragStart.endXY,\n\t\t\tdy: this.dragStart.dy,\n\t\t});\n\t}\n\thandleLine1Edge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tendXY,\n\t\t} = this.dragStart;\n\n\t\tconst {\n\t\t\tstartPos, mouseXY, xAccessor,\n\t\t\txScale, fullData,\n\t\t\tchartConfig: { yScale }\n\t\t} = moreProps;\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst x1 = xScale(endXY[0]);\n\t\tconst y1 = yScale(endXY[1]);\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\n\t\tonDrag(index, {\n\t\t\tstartXY: this.dragStart.startXY,\n\t\t\tendXY: [newX1Value, newY1Value],\n\t\t\tdy: this.dragStart.dy,\n\t\t});\n\t}\n\thandleChannelHeightChange(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tstartXY, endXY,\n\t\t} = this.dragStart;\n\n\t\tconst { chartConfig: { yScale } } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst y2 = yScale(endXY[1]);\n\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tconst newDy = newY2Value - endXY[1] + this.dragStart.dy;\n\n\t\tonDrag(index, {\n\t\t\tstartXY,\n\t\t\tendXY,\n\t\t\tdy: newDy,\n\t\t});\n\t}\n\tgetEdgeCircle({ xy, dragHandler, cursor, fill, edge }) {\n\t\tconst { hover } = this.state;\n\t\tconst { appearance } = this.props;\n\t\tconst { edgeStroke, edgeStrokeWidth, r } = appearance;\n\t\tconst { selected } = this.props;\n\t\tconst { onDragComplete } = this.props;\n\n\t\treturn <ClickableCircle\n\t\t\tref={this.saveNodeType(edge)}\n\n\t\t\tshow={selected || hover}\n\t\t\tcx={xy[0]}\n\t\t\tcy={xy[1]}\n\t\t\tr={r}\n\t\t\tfill={fill}\n\t\t\tstroke={edgeStroke}\n\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\tinteractiveCursorClass={cursor}\n\n\t\t\tonDragStart={this.handleDragStart}\n\t\t\tonDrag={dragHandler}\n\t\t\tonDragComplete={onDragComplete} />;\n\t}\n\trender() {\n\t\tconst { startXY, endXY, dy } = this.props;\n\t\tconst { interactive, hoverText, appearance } = this.props;\n\t\tconst {\n\t\t\tedgeFill, edgeFill2,\n\t\t\tstroke, strokeWidth, strokeOpacity,\n\t\t\tfill, fillOpacity,\n\t\t} = appearance;\n\t\tconst { selected } = this.props;\n\t\tconst { onDragComplete } = this.props;\n\t\tconst { hover } = this.state;\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\n\n\t\tconst hoverHandler = interactive\n\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\n\t\t\t: {};\n\n\t\tconst line1Edge = isDefined(startXY) && isDefined(endXY)\n\t\t\t? <g>\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: startXY,\n\t\t\t\t\tdragHandler: this.handleLine1Edge1Drag,\n\t\t\t\t\tcursor: \"react-stockcharts-move-cursor\",\n\t\t\t\t\tfill: edgeFill,\n\t\t\t\t\tedge: \"line1edge1\",\n\t\t\t\t})}\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: endXY,\n\t\t\t\t\tdragHandler: this.handleLine1Edge2Drag,\n\t\t\t\t\tcursor: \"react-stockcharts-move-cursor\",\n\t\t\t\t\tfill: edgeFill,\n\t\t\t\t\tedge: \"line1edge2\",\n\t\t\t\t})}\n\t\t\t</g>\n\t\t\t: null;\n\t\tconst line2Edge = isDefined(dy)\n\t\t\t? <g>\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: [startXY[0], startXY[1] + dy],\n\t\t\t\t\tdragHandler: this.handleChannelHeightChange,\n\t\t\t\t\tcursor: \"react-stockcharts-ns-resize-cursor\",\n\t\t\t\t\tfill: edgeFill2,\n\t\t\t\t\tedge: \"line2edge1\",\n\t\t\t\t})}\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: [endXY[0], endXY[1] + dy],\n\t\t\t\t\tdragHandler: this.handleChannelHeightChange,\n\t\t\t\t\tcursor: \"react-stockcharts-ns-resize-cursor\",\n\t\t\t\t\tfill: edgeFill2,\n\t\t\t\t\tedge: \"line2edge2\",\n\t\t\t\t})}\n\t\t\t</g>\n\t\t\t: null;\n\n\t\treturn <g>\n\t\t\t<ChannelWithArea\n\t\t\t\tref={this.saveNodeType(\"channel\")}\n\t\t\t\tselected={selected || hover}\n\n\t\t\t\t{...hoverHandler}\n\n\t\t\t\tstartXY={startXY}\n\t\t\t\tendXY={endXY}\n\t\t\t\tdy={dy}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tfill={fill}\n\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\tinteractiveCursorClass=\"react-stockcharts-move-cursor\"\n\n\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\tonDrag={this.handleChannelDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t/>\n\t\t\t{line1Edge}\n\t\t\t{line2Edge}\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover && !selected}\n\t\t\t\t{...restHoverTextProps} />\n\t\t</g>;\n\t}\n}\n\nEachEquidistantChannel.propTypes = {\n\tstartXY: PropTypes.arrayOf(PropTypes.number).isRequired,\n\tendXY: PropTypes.arrayOf(PropTypes.number).isRequired,\n\tdy: PropTypes.number,\n\n\tinteractive: PropTypes.bool.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\thoverText: PropTypes.object.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tfillOpacity: PropTypes.number.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tfill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeFill2: PropTypes.string.isRequired,\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tr: PropTypes.number.isRequired,\n\t}).isRequired,\n\n\tindex: PropTypes.number,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n};\n\nEachEquidistantChannel.defaultProps = {\n\tyDisplayFormat: d => d.toFixed(2),\n\tinteractive: true,\n\tselected: false,\n\n\tonDrag: noop,\n\tonDragComplete: noop,\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachEquidistantChannel;"]}