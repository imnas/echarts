{"version":3,"sources":["../../../src/lib/scale/evaluator.js"],"names":["xScale","useWholeData","clamp","pointsPerPxThreshold","minPointsPerPxThreshold","flipXScale","extentsWrapper","invert","log","getNewEnd","fallbackEnd","xAccessor","initialXScale","start","lastItem","lastItemX","lastItemXValue","range","rangeStart","rangeEnd","newEnd","filterData","data","inputDomain","currentPlotData","currentDomain","fallbackStart","plotData","domain","left","right","clampedDomain","filteredData","getFilteredResponse","length","Math","max","min","realInputDomain","copy","width","floor","chartWidth","showMaxThreshold","canShowTheseManyPeriods","newXScale","newWidth","slice","showMax","arrayLength","maxThreshold","minThreshold","showMinThreshold","threshold","ceil","newLeftIndex","newRightIndex"],"mappings":"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","file":"evaluator.js","sourcesContent":["\"use strict\";\n\nimport {\n\thead,\n\tlast,\n\tgetClosestItemIndexes,\n\tisDefined,\n\tisNotDefined,\n\tgetLogger,\n} from \"../utils\";\n\nconst log = getLogger(\"evaluator\");\n\nfunction getNewEnd(fallbackEnd, xAccessor, initialXScale, start) {\n\tconst {\n\t\tlastItem, lastItemX\n\t} = fallbackEnd;\n\tconst lastItemXValue = xAccessor(lastItem);\n\tconst [rangeStart, rangeEnd] = initialXScale.range();\n\n\tconst newEnd = (rangeEnd - rangeStart) / (lastItemX - rangeStart) * (lastItemXValue - start) + start;\n\treturn newEnd;\n}\n\nfunction extentsWrapper(useWholeData, clamp, pointsPerPxThreshold, minPointsPerPxThreshold, flipXScale) {\n\tfunction filterData(\n\t\tdata, inputDomain, xAccessor, initialXScale,\n\t\t{ currentPlotData, currentDomain, fallbackStart, fallbackEnd } = {}\n\t) {\n\t\tif (useWholeData) {\n\t\t\treturn { plotData: data, domain: inputDomain };\n\t\t}\n\n\t\tlet left = head(inputDomain);\n\t\tlet right = last(inputDomain);\n\t\tlet clampedDomain = inputDomain;\n\n\t\tlet filteredData = getFilteredResponse(data, left, right, xAccessor);\n\n\t\tif (filteredData.length === 1 && isDefined(fallbackStart)) {\n\t\t\tleft = fallbackStart;\n\t\t\tright = getNewEnd(fallbackEnd, xAccessor, initialXScale, left);\n\n\t\t\tclampedDomain = [\n\t\t\t\tleft,\n\t\t\t\tright,\n\t\t\t];\n\t\t\tfilteredData = getFilteredResponse(data, left, right, xAccessor);\n\t\t}\n\n\t\tif (clamp === \"left\" || clamp === \"both\" || clamp === true) {\n\t\t\tclampedDomain = [\n\t\t\t\tMath.max(left, xAccessor(head(data))),\n\t\t\t\tclampedDomain[1]\n\t\t\t];\n\t\t}\n\t\tif (clamp === \"right\" || clamp === \"both\" || clamp === true) {\n\t\t\tclampedDomain = [\n\t\t\t\tclampedDomain[0],\n\t\t\t\tMath.min(right, xAccessor(last(data)))\n\t\t\t];\n\t\t}\n\n\t\tconst realInputDomain = clampedDomain;\n\t\t// [xAccessor(head(filteredData)), xAccessor(last(filteredData))];\n\n\t\tconst xScale = initialXScale.copy().domain(realInputDomain);\n\n\t\tlet width = Math.floor(xScale(xAccessor(last(filteredData)))\n\t\t\t- xScale(xAccessor(head(filteredData))));\n\n\t\t// prevent negative width when flipXScale\n\t\tif (flipXScale && width < 0) {\n\t\t\twidth = width * -1;\n\t\t}\n\n\t\tlet plotData, domain;\n\n\t\tconst chartWidth = last(xScale.range()) - head(xScale.range());\n\n\t\tlog(`Trying to show ${filteredData.length} points in ${width}px,`\n\t\t\t+ ` I can show up to ${showMaxThreshold(width, pointsPerPxThreshold) - 1} points in that width. `\n\t\t\t+ `Also FYI the entire chart width is ${chartWidth}px and pointsPerPxThreshold is ${pointsPerPxThreshold}`);\n\n\t\tif (canShowTheseManyPeriods(width, filteredData.length, pointsPerPxThreshold, minPointsPerPxThreshold)) {\n\t\t\tplotData = filteredData;\n\t\t\tdomain = realInputDomain;\n\t\t\tlog(\"AND IT WORKED\");\n\t\t} else {\n\t\t\tif (chartWidth > showMaxThreshold(width, pointsPerPxThreshold) && isDefined(fallbackEnd)) {\n\t\t\t\tplotData = filteredData;\n\t\t\t\tconst newEnd = getNewEnd(fallbackEnd, xAccessor, initialXScale, head(realInputDomain));\n\t\t\t\tdomain = [\n\t\t\t\t\thead(realInputDomain),\n\t\t\t\t\tnewEnd\n\t\t\t\t];\n\t\t\t\t// plotData = currentPlotData || filteredData.slice(filteredData.length - showMax(width, pointsPerPxThreshold));\n\t\t\t\t// domain = currentDomain || [xAccessor(head(plotData)), xAccessor(last(plotData))];\n\n\t\t\t\tconst newXScale = xScale.copy().domain(domain);\n\t\t\t\tconst newWidth = Math.floor(newXScale(xAccessor(last(plotData)))\n\t\t\t\t\t- newXScale(xAccessor(head(plotData))));\n\n\t\t\t\tlog(`and ouch, that is too much, so instead showing ${plotData.length} in ${newWidth}px`);\n\t\t\t} else {\n\t\t\t\tplotData = currentPlotData || filteredData.slice(filteredData.length - showMax(width, pointsPerPxThreshold));\n\t\t\t\tdomain = currentDomain || [xAccessor(head(plotData)), xAccessor(last(plotData))];\n\n\t\t\t\tconst newXScale = xScale.copy().domain(domain);\n\t\t\t\tconst newWidth = Math.floor(newXScale(xAccessor(last(plotData)))\n\t\t\t\t\t- newXScale(xAccessor(head(plotData))));\n\n\t\t\t\tlog(`and ouch, that is too much, so instead showing ${plotData.length} in ${newWidth}px`);\n\t\t\t}\n\t\t}\n\t\treturn { plotData, domain };\n\t}\n\treturn { filterData };\n}\n\nfunction canShowTheseManyPeriods(width, arrayLength, maxThreshold, minThreshold) {\n\treturn arrayLength > showMinThreshold(width, minThreshold) && arrayLength < showMaxThreshold(width, maxThreshold);\n}\n\nfunction showMinThreshold(width, threshold) {\n\treturn Math.max(1, Math.ceil(width * threshold));\n}\n\nfunction showMaxThreshold(width, threshold) {\n\treturn Math.floor(width * threshold);\n}\n\nfunction showMax(width, threshold) {\n\treturn Math.floor(showMaxThreshold(width, threshold) * 0.97);\n}\n\nfunction getFilteredResponse(data, left, right, xAccessor) {\n\tconst newLeftIndex = getClosestItemIndexes(data, left, xAccessor).right;\n\tconst newRightIndex = getClosestItemIndexes(data, right, xAccessor).left;\n\n\tconst filteredData = data.slice(newLeftIndex, newRightIndex + 1);\n\t// console.log(right, newRightIndex, dataForInterval.length);\n\n\treturn filteredData;\n}\n\nexport default function({\n\txScale, useWholeData, clamp,\n\tpointsPerPxThreshold, minPointsPerPxThreshold,\n\tflipXScale\n}) {\n\treturn extentsWrapper(\n\t\tuseWholeData || isNotDefined(xScale.invert),\n\t\tclamp,\n\t\tpointsPerPxThreshold,\n\t\tminPointsPerPxThreshold,\n\t\tflipXScale\n\t);\n}\n"]}