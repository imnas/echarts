{"version":3,"sources":["../../../../../src/lib/interactive/hoc/EachFibRetracement.js"],"names":["React","Component","PropTypes","head","last","noop","getXValue","saveNodeType","isHover","getNewXY","StraightLine","generateLine","ClickableCircle","HoverTextNearMouse","Text","EachFibRetracement","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineNSResizeTop","handleLineNSResizeBottom","handleLineMove","handleLineDragStart","handleHover","nodes","state","hover","moreProps","hovering","setState","x1","y1","x2","y2","dragStart","index","onDrag","x1Value","y1Value","x2Value","y2Value","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","interactive","yDisplayFormat","type","appearance","stroke","strokeWidth","strokeOpacity","fontFamily","fontSize","fontFill","edgeStroke","edgeFill","nsEdgeFill","edgeStrokeWidth","r","hoverText","selected","onDragComplete","lines","helper","hoverTextEnabled","enable","restHoverTextProps","lineType","dir","map","line","j","text","y","percent","toFixed","xyProvider","start","end","x","Math","min","firstOrLast","length","interactiveCursorClass","interactiveEdgeCursorClass","dragHandler","edge1DragHandler","edge2DragHandler","hoverHandler","onHover","onUnHover","retracements","each","propTypes","any","isRequired","number","func","string","bool","shape","object","defaultProps","d"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,aAAjC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,UAAtC;;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,YAAP,IAAuBC,YAAvB,QAA2C,4BAA3C;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,kB;;;AACL,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACZA,KADY;;AAGlB,QAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;AACA,QAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;;AAEA,QAAKE,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BF,IAA3B,OAA7B;AACA,QAAKG,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BH,IAA9B,OAAhC;AACA,QAAKI,cAAL,GAAsB,MAAKA,cAAL,CAAoBJ,IAApB,OAAtB;;AAEA,QAAKK,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBL,IAAzB,OAA3B;;AAEA,QAAKM,WAAL,GAAmB,MAAKA,WAAL,CAAiBN,IAAjB,OAAnB;;AAEA,QAAKV,OAAL,GAAeA,QAAQU,IAAR,OAAf;AACA,QAAKX,YAAL,GAAoBA,aAAaW,IAAb,OAApB;AACA,QAAKO,KAAL,GAAa,EAAb;;AAEA,QAAKC,KAAL,GAAa;AACZC,UAAO;AADK,GAAb;AAlBkB;AAqBlB;;;;8BACWC,S,EAAW;AACtB,OAAI,KAAKF,KAAL,CAAWC,KAAX,KAAqBC,UAAUC,QAAnC,EAA6C;AAC5C,SAAKC,QAAL,CAAc;AACbH,YAAOC,UAAUC;AADJ,KAAd;AAGA;AACD;;;wCACqB;AAAA,gBAGjB,KAAKb,KAHY;AAAA,OAEpBe,EAFoB,UAEpBA,EAFoB;AAAA,OAEhBC,EAFgB,UAEhBA,EAFgB;AAAA,OAEZC,EAFY,UAEZA,EAFY;AAAA,OAERC,EAFQ,UAERA,EAFQ;;;AAKrB,QAAKC,SAAL,GAAiB;AAChBJ,UADgB,EACZC,MADY,EACRC,MADQ,EACJC;AADI,IAAjB;AAGA;;;iCACcN,S,EAAW;AAAA,iBACC,KAAKZ,KADN;AAAA,OACjBoB,KADiB,WACjBA,KADiB;AAAA,OACVC,MADU,WACVA,MADU;AAAA,oBAKrB,KAAKF,SALgB;AAAA,OAIpBG,OAJoB,cAIxBP,EAJwB;AAAA,OAIPQ,OAJO,cAIXP,EAJW;AAAA,OAIMQ,OAJN,cAIEP,EAJF;AAAA,OAImBQ,OAJnB,cAIeP,EAJf;AAAA,OAOjBQ,MAPiB,GAOwCd,SAPxC,CAOjBc,MAPiB;AAAA,OAOMC,MAPN,GAOwCf,SAPxC,CAOTgB,WAPS,CAOMD,MAPN;AAAA,OAOgBE,SAPhB,GAOwCjB,SAPxC,CAOgBiB,SAPhB;AAAA,OAO2BC,QAP3B,GAOwClB,SAPxC,CAO2BkB,QAP3B;AAAA,OAQjBC,QARiB,GAQKnB,SARL,CAQjBmB,QARiB;AAAA,OAQPC,OARO,GAQKpB,SARL,CAQPoB,OARO;;;AAUzB,OAAMjB,KAAKW,OAAOJ,OAAP,CAAX;AACA,OAAMN,KAAKW,OAAOJ,OAAP,CAAX;AACA,OAAMN,KAAKS,OAAOF,OAAP,CAAX;AACA,OAAMN,KAAKS,OAAOF,OAAP,CAAX;;AAEA,OAAMQ,KAAKF,SAAS,CAAT,IAAcC,QAAQ,CAAR,CAAzB;AACA,OAAME,KAAKH,SAAS,CAAT,IAAcC,QAAQ,CAAR,CAAzB;;AAEA,OAAMG,aAAa7C,UAAUoC,MAAV,EAAkBG,SAAlB,EAA6B,CAACd,KAAKkB,EAAN,EAAUjB,KAAKkB,EAAf,CAA7B,EAAiDJ,QAAjD,CAAnB;AACA,OAAMM,aAAaT,OAAOU,MAAP,CAAcrB,KAAKkB,EAAnB,CAAnB;AACA,OAAMI,aAAahD,UAAUoC,MAAV,EAAkBG,SAAlB,EAA6B,CAACZ,KAAKgB,EAAN,EAAUf,KAAKgB,EAAf,CAA7B,EAAiDJ,QAAjD,CAAnB;AACA,OAAMS,aAAaZ,OAAOU,MAAP,CAAcnB,KAAKgB,EAAnB,CAAnB;;AAEAb,UAAOD,KAAP,EAAc;AACbL,QAAIoB,UADS;AAEbnB,QAAIoB,UAFS;AAGbnB,QAAIqB,UAHS;AAIbpB,QAAIqB;AAJS,IAAd;AAMA;;;wCACqB3B,S,EAAW;AAAA,iBACN,KAAKZ,KADC;AAAA,OACxBoB,KADwB,WACxBA,KADwB;AAAA,OACjBC,MADiB,WACjBA,MADiB;AAAA,iBAI5B,KAAKrB,KAJuB;AAAA,OAG/Be,EAH+B,WAG/BA,EAH+B;AAAA,OAG3BE,EAH2B,WAG3BA,EAH2B;AAAA,OAGvBC,EAHuB,WAGvBA,EAHuB;;AAAA,mBAMjBzB,SAASmB,SAAT,CANiB;AAAA;AAAA,OAMvBI,EANuB;;AAQhCK,UAAOD,KAAP,EAAc;AACbL,UADa;AAEbC,UAFa;AAGbC,UAHa;AAIbC;AAJa,IAAd;AAMA;;;2CACwBN,S,EAAW;AAAA,iBACT,KAAKZ,KADI;AAAA,OAC3BoB,KAD2B,WAC3BA,KAD2B;AAAA,OACpBC,MADoB,WACpBA,MADoB;AAAA,iBAI/B,KAAKrB,KAJ0B;AAAA,OAGlCe,EAHkC,WAGlCA,EAHkC;AAAA,OAG9BC,EAH8B,WAG9BA,EAH8B;AAAA,OAG1BC,EAH0B,WAG1BA,EAH0B;;AAAA,oBAMpBxB,SAASmB,SAAT,CANoB;AAAA;AAAA,OAM1BM,EAN0B;;AAQnCG,UAAOD,KAAP,EAAc;AACbL,UADa;AAEbC,UAFa;AAGbC,UAHa;AAIbC;AAJa,IAAd;AAMA;;;kCACeN,S,EAAW;AAAA,iBACA,KAAKZ,KADL;AAAA,OAClBoB,KADkB,WAClBA,KADkB;AAAA,OACXC,MADW,WACXA,MADW;AAAA,iBAItB,KAAKrB,KAJiB;AAAA,OAGzBgB,EAHyB,WAGzBA,EAHyB;AAAA,OAGrBC,EAHqB,WAGrBA,EAHqB;AAAA,OAGjBC,EAHiB,WAGjBA,EAHiB;;AAAA,oBAMbzB,SAASmB,SAAT,CANa;AAAA;AAAA,OAMnBG,EANmB;;AAQ1BM,UAAOD,KAAP,EAAc;AACbL,UADa;AAEbC,UAFa;AAGbC,UAHa;AAIbC;AAJa,IAAd;AAMA;;;kCACeN,S,EAAW;AAAA,iBACA,KAAKZ,KADL;AAAA,OAClBoB,KADkB,WAClBA,KADkB;AAAA,OACXC,MADW,WACXA,MADW;AAAA,kBAItB,KAAKrB,KAJiB;AAAA,OAGzBe,EAHyB,YAGzBA,EAHyB;AAAA,OAGrBC,EAHqB,YAGrBA,EAHqB;AAAA,OAGjBE,EAHiB,YAGjBA,EAHiB;;AAAA,oBAMbzB,SAASmB,SAAT,CANa;AAAA;AAAA,OAMnBK,EANmB;;AAQ1BI,UAAOD,KAAP,EAAc;AACbL,UADa;AAEbC,UAFa;AAGbC,UAHa;AAIbC;AAJa,IAAd;AAMA;;;2BACQ;AAAA;;AAAA,kBACmB,KAAKlB,KADxB;AAAA,OACAe,EADA,YACAA,EADA;AAAA,OACIE,EADJ,YACIA,EADJ;AAAA,OACQD,EADR,YACQA,EADR;AAAA,OACYE,EADZ,YACYA,EADZ;AAAA,kBAEkD,KAAKlB,KAFvD;AAAA,OAEAwC,WAFA,YAEAA,WAFA;AAAA,OAEaC,cAFb,YAEaA,cAFb;AAAA,OAE6BC,IAF7B,YAE6BA,IAF7B;AAAA,OAEmCC,UAFnC,YAEmCA,UAFnC;AAAA,OAGAC,MAHA,GAGuCD,UAHvC,CAGAC,MAHA;AAAA,OAGQC,WAHR,GAGuCF,UAHvC,CAGQE,WAHR;AAAA,OAGqBC,aAHrB,GAGuCH,UAHvC,CAGqBG,aAHrB;AAAA,OAIAC,UAJA,GAImCJ,UAJnC,CAIAI,UAJA;AAAA,OAIYC,QAJZ,GAImCL,UAJnC,CAIYK,QAJZ;AAAA,OAIsBC,QAJtB,GAImCN,UAJnC,CAIsBM,QAJtB;AAAA,OAKAC,UALA,GAKyDP,UALzD,CAKAO,UALA;AAAA,OAKYC,QALZ,GAKyDR,UALzD,CAKYQ,QALZ;AAAA,OAKsBC,UALtB,GAKyDT,UALzD,CAKsBS,UALtB;AAAA,OAKkCC,eALlC,GAKyDV,UALzD,CAKkCU,eALlC;AAAA,OAKmDC,CALnD,GAKyDX,UALzD,CAKmDW,CALnD;AAAA,kBAMwB,KAAKtD,KAN7B;AAAA,OAMAuD,SANA,YAMAA,SANA;AAAA,OAMWC,QANX,YAMWA,QANX;AAAA,OAOA7C,KAPA,GAOU,KAAKD,KAPf,CAOAC,KAPA;AAAA,OAQA8C,cARA,GAQmB,KAAKzD,KARxB,CAQAyD,cARA;;AASR,OAAMC,QAAQC,OAAO,EAAE5C,MAAF,EAAME,MAAN,EAAUD,MAAV,EAAcE,MAAd,EAAP,CAAd;;AATQ,OAUQ0C,gBAVR,GAUoDL,SAVpD,CAUAM,MAVA;AAAA,OAU6BC,kBAV7B,4BAUoDP,SAVpD;;AAYR,OAAMQ,WAAWrB,SAAS,QAAT,GAAoB,OAApB,GAA8BA,SAAS,OAAT,GAAmB,MAAnB,GAA4BA,IAA3E;AACA,OAAMsB,MAAM7E,KAAKuE,KAAL,EAAY1C,EAAZ,GAAiB5B,KAAKsE,KAAL,EAAY1C,EAA7B,GAAkC,CAAlC,GAAsC,CAAC,GAAnD;;AAEA,UAAO;AAAA;AAAA;AACL0C,UAAMO,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AACvB,SAAMC,OAAU3B,eAAeyB,KAAKG,CAApB,CAAV,UAAqCH,KAAKI,OAAL,CAAaC,OAAb,CAAqB,CAArB,CAArC,OAAN;;AAEA,SAAMC,aAAa,SAAbA,UAAa,OAA6B;AAAA,UAA1B9C,MAA0B,QAA1BA,MAA0B;AAAA,UAAlBE,WAAkB,QAAlBA,WAAkB;AAAA,UACvCD,MADuC,GAC5BC,WAD4B,CACvCD,MADuC;;AAAA,0BAExBhC,aAAa;AACnC+C,aAAMqB,QAD6B;AAEnCU,cAAO,CAACP,KAAKnD,EAAN,EAAUmD,KAAKG,CAAf,CAF4B;AAGnCK,YAAK,CAACR,KAAKjD,EAAN,EAAUiD,KAAKG,CAAf,CAH8B;AAInC3C,qBAJmC;AAKnCC;AALmC,OAAb,CAFwB;AAAA,UAEvCZ,EAFuC,iBAEvCA,EAFuC;AAAA,UAEnCC,EAFmC,iBAEnCA,EAFmC;AAAA,UAE/BC,EAF+B,iBAE/BA,EAF+B;;AAU/C,UAAM0D,IAAIjD,OAAOkD,KAAKC,GAAL,CAAS9D,EAAT,EAAaE,EAAb,CAAP,IAA2B,EAArC;AACA,UAAMoD,IAAI1C,OAAOX,EAAP,IAAagD,MAAM,CAA7B;AACA,aAAO,CAACW,CAAD,EAAIN,CAAJ,CAAP;AACA,MAbD;;AAeA,SAAMS,cAAeX,MAAM,CAAP,IAAcA,MAAMT,MAAMqB,MAAN,GAAe,CAAvD;;AAEA,SAAMC,yBAAyBF,cAC5B,oCAD4B,GAE5B,+BAFH;;AAIA,SAAMG,6BAA6BH,cAChC,oCADgC,GAEhC,oCAFH;;AAIA,SAAMI,cAAcf,MAAM,CAAN,GACjB,OAAK/D,qBADY,GAEjB+D,MAAMT,MAAMqB,MAAN,GAAe,CAArB,GACC,OAAK1E,wBADN,GAEC,OAAKC,cAJT;;AAMA,SAAM6E,mBAAmBhB,MAAM,CAAN,GACtB,OAAK/D,qBADiB,GAEtB+D,MAAMT,MAAMqB,MAAN,GAAe,CAArB,GACC,OAAK1E,wBADN,GAEC,OAAKJ,eAJT;AAKA,SAAMmF,mBAAmBjB,MAAM,CAAN,GACtB,OAAK/D,qBADiB,GAEtB+D,MAAMT,MAAMqB,MAAN,GAAe,CAArB,GACC,OAAK1E,wBADN,GAEC,OAAKF,eAJT;;AAMA,SAAMkF,eAAe7C,cAClB,EAAE8C,SAAS,OAAK9E,WAAhB,EAA6B+E,WAAW,OAAK/E,WAA7C,EADkB,GAElB,EAFH;AAGA,YAAO;AAAA;AAAA,QAAG,KAAK2D,CAAR;AACN,0BAAC,YAAD;AACC,YAAK,OAAK5E,YAAL,WAA0B4E,CAA1B,CADN;AAEC,iBAAUX,YAAY7C;;AAFvB,SAIK0E,YAJL;;AAMC,aAAMtB,QANP;AAOC,gBAASG,KAAKnD,EAPf;AAQC,gBAASmD,KAAKG,CARf;AASC,gBAASH,KAAKjD,EATf;AAUC,gBAASiD,KAAKG,CAVf;AAWC,eAAQzB,MAXT;AAYC,oBAAcjC,SAAS6C,QAAV,GAAsBX,cAAc,CAApC,GAAwCA,WAZtD;AAaC,sBAAeC,aAbhB;AAcC,+BAAwBkC,sBAdzB;;AAgBC,oBAAa,OAAKzE,mBAhBnB;AAiBC,eAAQ2E,WAjBT;AAkBC,uBAAgBzB;AAlBjB,SADM;AAqBN;AAAC,WAAD;AAAA;AACC,kBAAUD;AACV;AAFD,UAGC,YAAYgB;AACZ;AAJD,UAKC,YAAYzB,UALb;AAMC,kBAAUC,QANX;AAOC,cAAMC,QAPP;AAOkBmB;AAPlB,OArBM;AA6BN,0BAAC,eAAD;AACC,YAAK,OAAK7E,YAAL,CAAkB,OAAlB,CADN;AAEC,aAAMiE,YAAY7C,KAFnB;AAGC,WAAIuD,KAAKnD,EAHV;AAIC,WAAImD,KAAKG,CAJV;AAKC,UAAGf,CALJ;AAMC,aAAMwB,cAAc1B,UAAd,GAA2BD,QANlC;AAOC,eAAQD,UAPT;AAQC,oBAAaG,eARd;AASC,+BAAwB4B,0BATzB;AAUC,eAAQE,gBAVT;AAWC,uBAAgB1B,cAXjB,GA7BM;AAyCN,0BAAC,eAAD;AACC,YAAK,OAAKlE,YAAL,CAAkB,OAAlB,CADN;AAEC,aAAMiE,YAAY7C,KAFnB;AAGC,WAAIuD,KAAKjD,EAHV;AAIC,WAAIiD,KAAKG,CAJV;AAKC,UAAGf,CALJ;AAMC,aAAMwB,cAAc1B,UAAd,GAA2BD,QANlC;AAOC,eAAQD,UAPT;AAQC,oBAAaG,eARd;AASC,+BAAwB4B,0BATzB;AAUC,eAAQG,gBAVT;AAWC,uBAAgB3B,cAXjB,GAzCM;AAqDN,0BAAC,kBAAD;AACC,aAAMG,oBAAoBjD,KAApB,IAA6B,CAAC6C;AADrC,SAEKM,kBAFL;AArDM,MAAP;AAyDA,KAzGA;AADK,IAAP;AA4GA;;;;EA5P+B7E,S;;AAgQjC,SAAS0E,MAAT,QAAoC;AAAA,KAAlB5C,EAAkB,SAAlBA,EAAkB;AAAA,KAAdC,EAAc,SAAdA,EAAc;AAAA,KAAVC,EAAU,SAAVA,EAAU;AAAA,KAANC,EAAM,SAANA,EAAM;;AACnC,KAAMgB,KAAKhB,KAAKF,EAAhB;AACA,KAAMwE,eAAe,CAAC,GAAD,EAAM,IAAN,EAAY,EAAZ,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,CAA5B,EACnBvB,GADmB,CACf;AAAA,SAAS;AACbK,YAASmB,IADI;AAEb1E,SAFa;AAGbE,SAHa;AAIboD,MAAInD,KAAMuE,OAAO,GAAR,GAAevD;AAJX,GAAT;AAAA,EADe,CAArB;;AAQA,QAAOsD,YAAP;AACA;;AAEDzF,mBAAmB2F,SAAnB,GAA+B;AAC9B3E,KAAI7B,UAAUyG,GAAV,CAAcC,UADY;AAE9B3E,KAAI/B,UAAUyG,GAAV,CAAcC,UAFY;AAG9B5E,KAAI9B,UAAU2G,MAAV,CAAiBD,UAHS;AAI9B1E,KAAIhC,UAAU2G,MAAV,CAAiBD,UAJS;;AAM9BnD,iBAAgBvD,UAAU4G,IAAV,CAAeF,UAND;AAO9BlD,OAAMxD,UAAU6G,MAAV,CAAiBH,UAPO;AAQ9BpC,WAAUtE,UAAU8G,IAAV,CAAeJ,UARK;;AAU9BjD,aAAYzD,UAAU+G,KAAV,CAAgB;AAC3BrD,UAAQ1D,UAAU6G,MAAV,CAAiBH,UADE;AAE3B/C,eAAa3D,UAAU2G,MAAV,CAAiBD,UAFH;AAG3B9C,iBAAe5D,UAAU2G,MAAV,CAAiBD,UAHL;AAI3B7C,cAAY7D,UAAU6G,MAAV,CAAiBH,UAJF;AAK3B5C,YAAU9D,UAAU2G,MAAV,CAAiBD,UALA;AAM3B3C,YAAU/D,UAAU6G,MAAV,CAAiBH,UANA;AAO3B1C,cAAYhE,UAAU6G,MAAV,CAAiBH,UAPF;AAQ3BzC,YAAUjE,UAAU6G,MAAV,CAAiBH,UARA;AAS3BxC,cAAYlE,UAAU6G,MAAV,CAAiBH,UATF;AAU3BvC,mBAAiBnE,UAAU2G,MAAV,CAAiBD,UAVP;AAW3BtC,KAAGpE,UAAU2G,MAAV,CAAiBD;AAXO,EAAhB,EAYTA,UAtB2B;;AAwB9BpD,cAAatD,UAAU8G,IAAV,CAAeJ,UAxBE;AAyB9BrC,YAAWrE,UAAUgH,MAAV,CAAiBN,UAzBE;;AA2B9BxE,QAAOlC,UAAU2G,MA3Ba;AA4B9BxE,SAAQnC,UAAU4G,IAAV,CAAeF,UA5BO;AA6B9BnC,iBAAgBvE,UAAU4G,IAAV,CAAeF;AA7BD,CAA/B;;AAgCA7F,mBAAmBoG,YAAnB,GAAkC;AACjC1D,iBAAgB;AAAA,SAAK2D,EAAE7B,OAAF,CAAU,CAAV,CAAL;AAAA,EADiB;AAEjC/B,cAAa,IAFoB;;AAIjCG,aAAY;AACXC,UAAQ,SADG;AAEXC,eAAa,CAFF;AAGXC,iBAAe,CAHJ;AAIXC,cAAY,8CAJD;AAKXC,YAAU,EALC;AAMXC,YAAU,SANC;AAOXC,cAAY,SAPD;AAQXC,YAAU,SARC;AASXC,cAAY,SATD;AAUXC,mBAAiB,CAVN;AAWXC,KAAG;AAXQ,EAJqB;AAiBjCE,WAAU,KAjBuB;;AAmBjCnC,SAAQhC,IAnByB;AAoBjCoE,iBAAgBpE,IApBiB;;AAsBjCkE,YAAW;AACVM,UAAQ;AADE;AAtBsB,CAAlC;;AA2BA,eAAe9D,kBAAf","file":"EachFibRetracement.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { head, last, noop } from \"../../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\nimport { saveNodeType, isHover } from \"../utils\";\n\nimport { getNewXY } from \"./EachTrendLine\";\nimport StraightLine, { generateLine } from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\nimport Text from \"../components/Text\";\n\nclass EachFibRetracement extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\n\t\tthis.handleLineNSResizeTop = this.handleLineNSResizeTop.bind(this);\n\t\tthis.handleLineNSResizeBottom = this.handleLineNSResizeBottom.bind(this);\n\t\tthis.handleLineMove = this.handleLineMove.bind(this);\n\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1, y1, x2, y2,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1, y1, x2, y2,\n\t\t};\n\t}\n\thandleLineMove(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1: x1Value, y1: y1Value, x2: x2Value, y2: y2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(x1Value);\n\t\tconst y1 = yScale(y1Value);\n\t\tconst x2 = xScale(x2Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1: newX1Value,\n\t\t\ty1: newY1Value,\n\t\t\tx2: newX2Value,\n\t\t\ty2: newY2Value,\n\t\t});\n\t}\n\thandleLineNSResizeTop(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1, x2, y2,\n\t\t} = this.props;\n\n\t\tconst [, y1] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\thandleLineNSResizeBottom(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1, y1, x2,\n\t\t} = this.props;\n\n\t\tconst [, y2] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\ty1, x2, y2,\n\t\t} = this.props;\n\n\t\tconst [x1] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1, y1, y2,\n\t\t} = this.props;\n\n\t\tconst [x2] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\trender() {\n\t\tconst { x1, x2, y1, y2 } = this.props;\n\t\tconst { interactive, yDisplayFormat, type, appearance } = this.props;\n\t\tconst { stroke, strokeWidth, strokeOpacity } = appearance;\n\t\tconst { fontFamily, fontSize, fontFill } = appearance;\n\t\tconst { edgeStroke, edgeFill, nsEdgeFill, edgeStrokeWidth, r } = appearance;\n\t\tconst { hoverText, selected } = this.props;\n\t\tconst { hover } = this.state;\n\t\tconst { onDragComplete } = this.props;\n\t\tconst lines = helper({ x1, x2, y1, y2 });\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\n\n\t\tconst lineType = type === \"EXTEND\" ? \"XLINE\" : type === \"BOUND\" ? \"LINE\" : type;\n\t\tconst dir = head(lines).y1 > last(lines).y1 ? 3 : -1.3;\n\n\t\treturn <g>\n\t\t\t{lines.map((line, j) => {\n\t\t\t\tconst text = `${yDisplayFormat(line.y)} (${line.percent.toFixed(2)}%)`;\n\n\t\t\t\tconst xyProvider = ({ xScale, chartConfig }) => {\n\t\t\t\t\tconst { yScale } = chartConfig;\n\t\t\t\t\tconst { x1, y1, x2 } = generateLine({\n\t\t\t\t\t\ttype: lineType,\n\t\t\t\t\t\tstart: [line.x1, line.y],\n\t\t\t\t\t\tend: [line.x2, line.y],\n\t\t\t\t\t\txScale,\n\t\t\t\t\t\tyScale,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst x = xScale(Math.min(x1, x2)) + 10;\n\t\t\t\t\tconst y = yScale(y1) + dir * 4;\n\t\t\t\t\treturn [x, y];\n\t\t\t\t};\n\n\t\t\t\tconst firstOrLast = (j === 0) || (j === lines.length - 1);\n\n\t\t\t\tconst interactiveCursorClass = firstOrLast\n\t\t\t\t\t? \"react-stockcharts-ns-resize-cursor\"\n\t\t\t\t\t: \"react-stockcharts-move-cursor\";\n\n\t\t\t\tconst interactiveEdgeCursorClass = firstOrLast\n\t\t\t\t\t? \"react-stockcharts-ns-resize-cursor\"\n\t\t\t\t\t: \"react-stockcharts-ew-resize-cursor\";\n\n\t\t\t\tconst dragHandler = j === 0\n\t\t\t\t\t? this.handleLineNSResizeTop\n\t\t\t\t\t: j === lines.length - 1\n\t\t\t\t\t\t? this.handleLineNSResizeBottom\n\t\t\t\t\t\t: this.handleLineMove;\n\n\t\t\t\tconst edge1DragHandler = j === 0\n\t\t\t\t\t? this.handleLineNSResizeTop\n\t\t\t\t\t: j === lines.length - 1\n\t\t\t\t\t\t? this.handleLineNSResizeBottom\n\t\t\t\t\t\t: this.handleEdge1Drag;\n\t\t\t\tconst edge2DragHandler = j === 0\n\t\t\t\t\t? this.handleLineNSResizeTop\n\t\t\t\t\t: j === lines.length - 1\n\t\t\t\t\t\t? this.handleLineNSResizeBottom\n\t\t\t\t\t\t: this.handleEdge2Drag;\n\n\t\t\t\tconst hoverHandler = interactive\n\t\t\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\n\t\t\t\t\t: {};\n\t\t\t\treturn <g key={j}>\n\t\t\t\t\t<StraightLine\n\t\t\t\t\t\tref={this.saveNodeType(`line_${j}`)}\n\t\t\t\t\t\tselected={selected || hover}\n\n\t\t\t\t\t\t{...hoverHandler}\n\n\t\t\t\t\t\ttype={lineType}\n\t\t\t\t\t\tx1Value={line.x1}\n\t\t\t\t\t\ty1Value={line.y}\n\t\t\t\t\t\tx2Value={line.x2}\n\t\t\t\t\t\ty2Value={line.y}\n\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\n\t\t\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\t\t\tonDrag={dragHandler}\n\t\t\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\t\t/>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t/* eslint-disable */\n\t\t\t\t\t\txyProvider={xyProvider} \n\t\t\t\t\t\t/* eslint-enable */\n\t\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\tfill={fontFill}>{text}</Text>\n\t\t\t\t\t<ClickableCircle\n\t\t\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\t\t\tshow={selected || hover}\n\t\t\t\t\t\tcx={line.x1}\n\t\t\t\t\t\tcy={line.y}\n\t\t\t\t\t\tr={r}\n\t\t\t\t\t\tfill={firstOrLast ? nsEdgeFill : edgeFill}\n\t\t\t\t\t\tstroke={edgeStroke}\n\t\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\t\t\tinteractiveCursorClass={interactiveEdgeCursorClass}\n\t\t\t\t\t\tonDrag={edge1DragHandler}\n\t\t\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t\t\t<ClickableCircle\n\t\t\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\t\t\tshow={selected || hover}\n\t\t\t\t\t\tcx={line.x2}\n\t\t\t\t\t\tcy={line.y}\n\t\t\t\t\t\tr={r}\n\t\t\t\t\t\tfill={firstOrLast ? nsEdgeFill : edgeFill}\n\t\t\t\t\t\tstroke={edgeStroke}\n\t\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\t\t\tinteractiveCursorClass={interactiveEdgeCursorClass}\n\t\t\t\t\t\tonDrag={edge2DragHandler}\n\t\t\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t\t\t<HoverTextNearMouse\n\t\t\t\t\t\tshow={hoverTextEnabled && hover && !selected}\n\t\t\t\t\t\t{...restHoverTextProps} />\n\t\t\t\t</g>;\n\t\t\t})}\n\t\t</g>;\n\t}\n}\n\n\nfunction helper({ x1, y1, x2, y2 }) {\n\tconst dy = y2 - y1;\n\tconst retracements = [100, 61.8, 50, 38.2, 23.6, 0]\n\t\t.map(each => ({\n\t\t\tpercent: each,\n\t\t\tx1,\n\t\t\tx2,\n\t\t\ty: (y2 - (each / 100) * dy),\n\t\t}));\n\n\treturn retracements;\n}\n\nEachFibRetracement.propTypes = {\n\tx1: PropTypes.any.isRequired,\n\tx2: PropTypes.any.isRequired,\n\ty1: PropTypes.number.isRequired,\n\ty2: PropTypes.number.isRequired,\n\n\tyDisplayFormat: PropTypes.func.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tfontFamily: PropTypes.string.isRequired,\n\t\tfontSize: PropTypes.number.isRequired,\n\t\tfontFill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tnsEdgeFill: PropTypes.string.isRequired,\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tr: PropTypes.number.isRequired,\n\t}).isRequired,\n\n\tinteractive: PropTypes.bool.isRequired,\n\thoverText: PropTypes.object.isRequired,\n\n\tindex: PropTypes.number,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n};\n\nEachFibRetracement.defaultProps = {\n\tyDisplayFormat: d => d.toFixed(2),\n\tinteractive: true,\n\n\tappearance: {\n\t\tstroke: \"#000000\",\n\t\tstrokeWidth: 1,\n\t\tstrokeOpacity: 1,\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\t\tfontSize: 10,\n\t\tfontFill: \"#000000\",\n\t\tedgeStroke: \"#000000\",\n\t\tedgeFill: \"#FFFFFF\",\n\t\tnsEdgeFill: \"#000000\",\n\t\tedgeStrokeWidth: 1,\n\t\tr: 5,\n\t},\n\tselected: false,\n\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachFibRetracement;\n"]}