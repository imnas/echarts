{"version":3,"sources":["../../../src/lib/coordinates/EdgeCoordinateV3.js"],"names":["renderSVG","drawOnCanvas","props","className","edge","helper","line","coordinateBase","coordinate","opacity","stroke","x1","y1","x2","y2","rectWidth","rectHeight","arrowWidth","path","orient","edgeXRect","edgeYRect","fill","edgeXText","edgeYText","textAnchor","fontFamily","fontSize","textFill","displayCoordinate","show","type","edgeAt","hideLine","lineStrokeDasharray","lineStroke","lineOpacity","strokeOpacity","strokeWidth","rectRadius","dx","dy","undefined","strokeDasharray","ctx","font","textBaseline","width","Math","round","measureText","fillStyle","strokeStyle","lineWidth","x","y","halfHeight","beginPath","moveTo","lineTo","closePath","roundRect","rect","textAlign","fillText","dashArray","split","map","d","setLineDash","height","radius","quadraticCurveTo"],"mappings":"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","file":"EdgeCoordinateV3.js","sourcesContent":["\"use strict\";\n\nimport React from \"react\";\n\nimport { hexToRGBA, isDefined, getStrokeDasharray } from \"../utils\";\n\n/* eslint-disable react/prop-types */\nexport function renderSVG(props) {\n\tconst { className } = props;\n\n\tconst edge = helper(props);\n\tif (edge === null) return null;\n\tlet line, coordinateBase, coordinate;\n\n\tif (isDefined(edge.line)) {\n\t\tline = <line\n\t\t\tclassName=\"react-stockcharts-cross-hair\" opacity={edge.line.opacity} stroke={edge.line.stroke}\n\t\t\tx1={edge.line.x1} y1={edge.line.y1}\n\t\t\tx2={edge.line.x2} y2={edge.line.y2} />;\n\t}\n\tif (isDefined(edge.coordinateBase)) {\n\n\t\tconst { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n\t\tconst path = edge.orient === \"left\"\n\t\t\t? `M0,0L0,${ rectHeight }L${ rectWidth },${ rectHeight }L${ rectWidth + arrowWidth },10L${ rectWidth },0L0,0L0,0`\n\t\t\t: `M0,${ arrowWidth }L${ arrowWidth },${ rectHeight }L${ rectWidth + arrowWidth },${ rectHeight }L${ rectWidth + arrowWidth },0L${ arrowWidth },0L0,${ arrowWidth }`;\n\n\t\tcoordinateBase = edge.orient === \"left\" || edge.orient === \"right\"\n\t\t\t? <g transform={`translate(${edge.coordinateBase.edgeXRect},${edge.coordinateBase.edgeYRect})`}>\n\t\t\t\t<path d={path} key={1} className=\"react-stockchart-text-background\"\n\t\t\t\t\theight={rectHeight} width={rectWidth}\n\t\t\t\t\tfill={edge.coordinateBase.fill} opacity={edge.coordinateBase.opacity} />\n\t\t\t</g>\n\t\t\t: <rect key={1} className=\"react-stockchart-text-background\"\n\t\t\t\tx={edge.coordinateBase.edgeXRect}\n\t\t\t\ty={edge.coordinateBase.edgeYRect}\n\t\t\t\theight={rectHeight} width={rectWidth}\n\t\t\t\tfill={edge.coordinateBase.fill} opacity={edge.coordinateBase.opacity} />;\n\n\t\tcoordinate = (<text key={2} x={edge.coordinate.edgeXText}\n\t\t\ty={edge.coordinate.edgeYText}\n\t\t\ttextAnchor={edge.coordinate.textAnchor}\n\t\t\tfontFamily={edge.coordinate.fontFamily}\n\t\t\tfontSize={edge.coordinate.fontSize}\n\t\t\tdy=\".32em\" fill={edge.coordinate.textFill} >{edge.coordinate.displayCoordinate}</text>);\n\t}\n\treturn (\n\t\t<g className={className}>\n\t\t\t{line}\n\t\t\t{coordinateBase}\n\t\t\t{coordinate}\n\t\t</g>\n\t);\n}\n/* eslint-enable react/prop-types */\n\nfunction helper(props) {\n\tconst { coordinate: displayCoordinate, show, type, orient, edgeAt, hideLine, lineStrokeDasharray } = props;\n\tconst { fill, opacity, fontFamily, fontSize, textFill, lineStroke, lineOpacity } = props;\n\tconst { stroke, strokeOpacity, strokeWidth } = props;\n\tconst { arrowWidth, rectWidth, rectHeight, rectRadius } = props;\n\tconst { x1, y1, x2, y2, dx } = props;\n\n\tif (!show) return null;\n\n\tlet coordinateBase, coordinate;\n\tif (isDefined(displayCoordinate)) {\n\t\tconst textAnchor = \"middle\"; // TODO: Below it is necessary to implement logic for the possibility of alignment from the right or from the left.\n\n\t\tlet edgeXRect, edgeYRect, edgeXText, edgeYText;\n\n\t\tif (type === \"horizontal\") {\n\t\t\tedgeXRect = dx + ((orient === \"right\") ? edgeAt + 1 : edgeAt - rectWidth - 1);\n\t\t\tedgeYRect = y1 - (rectHeight / 2);\n\t\t\tedgeXText = dx + ((orient === \"right\") ? edgeAt + (rectWidth / 2) : edgeAt - (rectWidth / 2));\n\t\t\tedgeYText = y1;\n\t\t} else {\n\t\t\tconst dy = (orient === \"bottom\") ? strokeWidth - 1 : - strokeWidth + 1;\n\t\t\tedgeXRect = x1 - (rectWidth / 2);\n\t\t\tedgeYRect = ((orient === \"bottom\") ? edgeAt : edgeAt - rectHeight) + dy;\n\t\t\tedgeXText = x1;\n\t\t\tedgeYText = ((orient === \"bottom\") ? edgeAt + (rectHeight / 2) : edgeAt - (rectHeight / 2)) + dy;\n\t\t}\n\n\t\tcoordinateBase = {\n\t\t\tedgeXRect, edgeYRect, rectHeight, rectWidth, rectRadius, fill, opacity, arrowWidth, stroke, strokeOpacity, strokeWidth\n\t\t};\n\t\tcoordinate = {\n\t\t\tedgeXText, edgeYText, textAnchor, fontFamily, fontSize, textFill, displayCoordinate\n\t\t};\n\t}\n\n\tconst line = hideLine ? undefined : {\n\t\topacity: lineOpacity,\n\t\tstroke: lineStroke,\n\t\tstrokeDasharray: lineStrokeDasharray,\n\t\tx1, y1, x2, y2\n\t};\n\n\treturn {\n\t\tcoordinateBase, coordinate, line, orient\n\t};\n}\n\nexport function drawOnCanvas(ctx, props) {\n\tconst { fontSize, fontFamily } = props;\n\n\tctx.font = `${fontSize}px ${fontFamily}`;\n\tctx.textBaseline = \"middle\";\n\tconst width = Math.round(ctx.measureText(props.coordinate).width + 10);\n\n\tconst edge = helper({ ...props, rectWidth: width });\n\n\tif (edge === null) return;\n\n\tif (isDefined(edge.coordinateBase)) {\n\t\tconst { rectWidth, rectHeight, rectRadius, arrowWidth } = edge.coordinateBase;\n\n\t\tctx.fillStyle = hexToRGBA(edge.coordinateBase.fill, edge.coordinateBase.opacity);\n\t\tif (isDefined(edge.coordinateBase.stroke)) {\n\t\t\tctx.strokeStyle = hexToRGBA(edge.coordinateBase.stroke, edge.coordinateBase.strokeOpacity);\n\t\t\tctx.lineWidth = edge.coordinateBase.strokeWidth;\n\t\t}\n\n\t\tlet x = edge.coordinateBase.edgeXRect;\n\t\tconst y = edge.coordinateBase.edgeYRect;\n\t\tconst halfHeight = rectHeight / 2;\n\n\t\tctx.beginPath();\n\t\tif (edge.orient === \"right\") {\n\t\t\tx -= arrowWidth;\n\t\t\tctx.moveTo(x, y + halfHeight);\n\t\t\tctx.lineTo(x + arrowWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n\t\t\tctx.lineTo(x + arrowWidth, y + rectHeight);\n\t\t\tctx.closePath();\n\t\t} else if (edge.orient === \"left\") {\n\t\t\t// x += arrowWidth;\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + rectWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y + halfHeight);\n\t\t\tctx.lineTo(x + rectWidth, y + rectHeight);\n\t\t\tctx.lineTo(x, y + rectHeight);\n\t\t\tctx.closePath();\n\t\t} else {\n\t\t\t// console.error(x, y, rectWidth, rectHeight)\n\t\t\tif (rectRadius) {\n\t\t\t\troundRect(ctx, x, y, rectWidth, rectHeight, 3);\n\t\t\t} else {\n\t\t\t\tctx.rect(x, y, rectWidth, rectHeight);\n\t\t\t}\n\t\t}\n\t\tctx.fill();\n\n\t\tif (isDefined(edge.coordinateBase.stroke)) {\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.fillStyle = edge.coordinate.textFill;\n\t\tctx.textAlign = edge.coordinate.textAnchor === \"middle\" ? \"center\" : edge.coordinate.textAnchor;\n\t\tctx.fillText(edge.coordinate.displayCoordinate, edge.coordinate.edgeXText, edge.coordinate.edgeYText);\n\t}\n\n\tif (isDefined(edge.line)) {\n\t\tconst dashArray = getStrokeDasharray(edge.line.strokeDasharray).split(\",\").map(d => +d);\n\t\tctx.setLineDash(dashArray);\n\t\tctx.strokeStyle = hexToRGBA(edge.line.stroke, edge.line.opacity);\n\t\tctx.lineWidth = 1;\n\t\tctx.beginPath();\n\t\tctx.moveTo(edge.line.x1, edge.line.y1);\n\t\tctx.lineTo(edge.line.x2, edge.line.y2);\n\t\tctx.stroke();\n\t}\n}\n\nfunction roundRect(ctx, x, y, width, height, radius) {\n\tctx.beginPath();\n\tctx.moveTo(x + radius, y);\n\tctx.lineTo(x + width - radius, y);\n\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\tctx.lineTo(x + width, y + height - radius);\n\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\tctx.lineTo(x + radius, y + height);\n\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\tctx.lineTo(x, y + radius);\n\tctx.quadraticCurveTo(x, y, x + radius, y);\n\tctx.closePath();\n}\n\n// export default EdgeCoordinate;\n"]}