{"version":3,"sources":["../../../../src/lib/series/AreaOnlySeries.js"],"names":["React","Component","PropTypes","area","d3Area","GenericChartComponent","getAxisCanvas","hexToRGBA","isDefined","first","functor","AreaOnlySeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","defined","base","fill","stroke","opacity","interpolation","xScale","yScale","chartConfig","plotData","xAccessor","fillStyle","strokeStyle","beginPath","newBase","areaSeries","d","x","y0","y1","context","curve","className","newClassName","concat","propTypes","string","func","isRequired","number","oneOfType","defaultProps","isNaN","range"],"mappings":"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","file":"AreaOnlySeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { area as d3Area } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { hexToRGBA, isDefined, first, functor } from \"../utils\";\n\nclass AreaOnlySeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor, defined, base } = this.props;\n\t\tconst { fill, stroke, opacity, interpolation } = this.props;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\t\tctx.fillStyle = hexToRGBA(fill, opacity);\n\t\tctx.strokeStyle = stroke;\n\n\t\tctx.beginPath();\n\t\tconst newBase = functor(base);\n\t\tconst areaSeries = d3Area()\n\t\t\t.defined(d => defined(yAccessor(d)))\n\t\t\t.x((d) => xScale(xAccessor(d)))\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\n\t\t\t.y1((d) => yScale(yAccessor(d)))\n\t\t\t.context(ctx);\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tareaSeries.curve(interpolation);\n\t\t}\n\t\tareaSeries(plotData);\n\t\tctx.fill();\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor, defined, base } = this.props;\n\t\tconst { stroke, fill, className, opacity, interpolation } = this.props;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t\tconst newBase = functor(base);\n\t\tconst areaSeries = d3Area()\n\t\t\t.defined(d => defined(yAccessor(d)))\n\t\t\t.x((d) => xScale(xAccessor(d)))\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\n\t\t\t.y1((d) => yScale(yAccessor(d)));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tareaSeries.curve(interpolation);\n\t\t}\n\n\t\tconst d = areaSeries(plotData);\n\t\tconst newClassName = className.concat(isDefined(stroke) ? \"\" : \" line-stroke\");\n\t\treturn (\n\t\t\t<path d={d} stroke={stroke} fill={fill} className={newClassName} opacity={opacity} />\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nAreaOnlySeries.propTypes = {\n\tclassName: PropTypes.string,\n\tyAccessor: PropTypes.func.isRequired,\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string,\n\topacity: PropTypes.number,\n\tdefined: PropTypes.func,\n\tbase: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.number\n\t]),\n\tinterpolation: PropTypes.func,\n};\n\nAreaOnlySeries.defaultProps = {\n\tclassName: \"line \",\n\tfill: \"none\",\n\topacity: 1,\n\tdefined: d => !isNaN(d),\n\tbase: (yScale /* , d, moreProps */) => first(yScale.range()),\n};\n\nexport default AreaOnlySeries;\n"]}