{"version":3,"sources":["../../../src/lib/series/StackedBarSeries.js"],"names":["identityStack","drawOnCanvasHelper","svgHelper","getBarsSVG2","drawOnCanvas2","getBars","StackedBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","clip","propTypes","baseAt","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","width","opacity","fill","string","className","defaultProps","xScale","yScale","range","swapScales","keys","stack","data","response","map","key","i","arrays","array","d","index","x","arguments","length","stackFn","defaultPostAction","postRotateAction","rotateXY","chartConfig","plotData","bars","doStuff","convertToArray","item","Array","isArray","yAccessor","modifiedYAccessor","modifiedXAccessor","modifiedXScale","modifiedYScale","postProcessor","each","y","height","idx","nest","entries","forEach","outer","values","strokeStyle","fillStyle","fillRect","strokeRect","after","spaceBetweenBar","getClassName","getFill","getBase","widthFunctor","barWidth","Math","round","eachBarWidth","offset","ds","appearance","eachYAccessor","_","newData","h","groupOffset","groupWidth","filter","isNaN","bar"],"mappings":"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","file":"StackedBarSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { nest as d3Nest } from \"d3-collection\";\nimport { merge } from \"d3-array\";\nimport { stack as d3Stack } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { identity, hexToRGBA, head, functor, plotDataLengthBarWidth } from \"../utils\";\n\nclass StackedBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\t// var { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tdrawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, d3Stack);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\treturn <g>{svgHelper(this.props, moreProps, xAccessor, d3Stack)}</g>;\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nStackedBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]).isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nStackedBarSeries.defaultProps = {\n\tbaseAt: (xScale, yScale/* , d*/) => head(yScale.range()),\n\tdirection: \"up\",\n\tclassName: \"bar\",\n\tstroke: true,\n\tfill: \"#4682B4\",\n\topacity: 0.5,\n\twidth: plotDataLengthBarWidth,\n\tclip: true,\n\tswapScales: false,\n};\n\nexport function identityStack() {\n\tlet keys = [];\n\tfunction stack(data) {\n\t\tconst response = keys.map((key, i) => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet arrays = data.map(d => {\n\t\t\t\t// eslint-disable-next-line prefer-const\n\t\t\t\tlet array = [0, d[key]];\n\t\t\t\tarray.data = d;\n\t\t\t\treturn array;\n\t\t\t});\n\t\t\tarrays.key = key;\n\t\t\tarrays.index = i;\n\t\t\treturn arrays;\n\t\t});\n\t\treturn response;\n\t}\n\tstack.keys = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn keys;\n\t\t}\n\t\tkeys = x;\n\t\treturn stack;\n\t};\n\treturn stack;\n}\n\n\nexport function drawOnCanvasHelper(ctx, props, moreProps, xAccessor, stackFn, defaultPostAction = identity, postRotateAction = rotateXY) {\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n\n\tdrawOnCanvas2(props, ctx, bars);\n}\n\nfunction convertToArray(item) {\n\treturn Array.isArray(item) ? item : [item];\n}\n\nexport function svgHelper(props, moreProps, xAccessor, stackFn, defaultPostAction = identity, postRotateAction = rotateXY) {\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\tconst bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n\treturn getBarsSVG2(props, bars);\n}\n\nfunction doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction) {\n\tconst { yAccessor, swapScales } = props;\n\n\tconst modifiedYAccessor = swapScales ? convertToArray(props.xAccessor) : convertToArray(yAccessor);\n\tconst modifiedXAccessor = swapScales ? yAccessor : xAccessor;\n\n\tconst modifiedXScale = swapScales ? yScale : xScale;\n\tconst modifiedYScale = swapScales ? xScale : yScale;\n\n\tconst postProcessor =  swapScales ? postRotateAction : defaultPostAction;\n\n\tconst bars = getBars(props, modifiedXAccessor, modifiedYAccessor, modifiedXScale, modifiedYScale, plotData, stackFn, postProcessor);\n\n\treturn bars;\n}\n\nexport const rotateXY = (array) => array.map(each => {\n\treturn {\n\t\t...each,\n\t\tx: each.y,\n\t\ty: each.x,\n\t\theight: each.width,\n\t\twidth: each.height\n\t};\n});\n\nexport function getBarsSVG2(props, bars) {\n\t/* eslint-disable react/prop-types */\n\tconst { opacity } = props;\n\t/* eslint-enable react/prop-types */\n\n\treturn bars.map((d, idx) => {\n\t\tif (d.width <= 1) {\n\t\t\treturn <line key={idx} className={d.className}\n\t\t\t\tstroke={d.fill}\n\t\t\t\tx1={d.x} y1={d.y}\n\t\t\t\tx2={d.x} y2={d.y + d.height} />;\n\t\t}\n\t\treturn <rect key={idx} className={d.className}\n\t\t\tstroke={d.stroke}\n\t\t\tfill={d.fill}\n\t\t\tx={d.x}\n\t\t\ty={d.y}\n\t\t\twidth={d.width}\n\t\t\tfillOpacity={opacity}\n\t\t\theight={d.height} />;\n\t});\n}\n\nexport function drawOnCanvas2(props, ctx, bars) {\n\tconst { stroke } = props;\n\n\tconst nest = d3Nest()\n\t\t.key(d => d.fill)\n\t\t.entries(bars);\n\n\tnest.forEach(outer => {\n\t\tconst { key, values } = outer;\n\t\tif (head(values).width > 1) {\n\t\t\tctx.strokeStyle = key;\n\t\t}\n\t\tconst fillStyle = head(values).width <= 1\n\t\t\t? key\n\t\t\t: hexToRGBA(key, props.opacity);\n\t\tctx.fillStyle = fillStyle;\n\n\t\tvalues.forEach(d => {\n\t\t\tif (d.width <= 1) {\n\t\t\t\t/* <line key={idx} className={d.className}\n\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\t\tx1={d.x} y1={d.y}\n\t\t\t\t\t\t\tx2={d.x} y2={d.y + d.height} />*/\n\t\t\t\t/*\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\tctx.lineTo(d.x, d.y + d.height);\n\t\t\t\tctx.stroke();\n\t\t\t\t*/\n\t\t\t\tctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n\t\t\t} else {\n\t\t\t\t/* <rect key={idx} className={d.className}\n\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\twidth={d.width}\n\t\t\t\t\t\theight={d.height} /> */\n\t\t\t\t/*\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\t\t\tctx.fill();\n\t\t\t\t*/\n\t\t\t\tctx.fillRect(d.x, d.y, d.width, d.height);\n\t\t\t\tif (stroke) ctx.strokeRect(d.x, d.y, d.width, d.height);\n\t\t\t}\n\n\t\t});\n\t});\n}\n\nexport function getBars(props, xAccessor, yAccessor, xScale, yScale, plotData, stack = identityStack, after = identity) {\n\tconst { baseAt, className, fill, stroke, spaceBetweenBar = 0 } = props;\n\n\tconst getClassName = functor(className);\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\n\tconst widthFunctor = functor(props.width);\n\tconst width = widthFunctor(props, {\n\t\txScale,\n\t\txAccessor,\n\t\tplotData\n\t});\n\n\tconst barWidth = Math.round(width);\n\n\tconst eachBarWidth = (barWidth - spaceBetweenBar * (yAccessor.length - 1)) / yAccessor.length;\n\n\tconst offset = (barWidth === 1 ? 0 : 0.5 * width);\n\n\tconst ds = plotData\n\t\t.map(each => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet d = {\n\t\t\t\tappearance: {\n\t\t\t\t},\n\t\t\t\tx: xAccessor(each),\n\t\t\t};\n\t\t\tyAccessor.forEach((eachYAccessor, i) => {\n\t\t\t\tconst key = `y${i}`;\n\t\t\t\td[key] = eachYAccessor(each);\n\t\t\t\tconst appearance = {\n\t\t\t\t\tclassName: getClassName(each, i),\n\t\t\t\t\tstroke: stroke ? getFill(each, i) : \"none\",\n\t\t\t\t\tfill: getFill(each, i),\n\t\t\t\t};\n\t\t\t\td.appearance[key] = appearance;\n\t\t\t});\n\t\t\treturn d;\n\t\t});\n\n\tconst keys = yAccessor.map((_, i) => `y${i}`);\n\n\t// console.log(ds);\n\n\tconst data = stack().keys(keys)(ds);\n\n\t// console.log(data);\n\n\tconst newData = data.map((each, i) => {\n\t\tconst key = each.key;\n\t\treturn each.map((d) => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet array = [d[0], d[1]];\n\t\t\tarray.data = {\n\t\t\t\tx: d.data.x,\n\t\t\t\ti,\n\t\t\t\tappearance: d.data.appearance[key]\n\t\t\t};\n\t\t\treturn array;\n\t\t});\n\t});\n\t// console.log(newData);\n\t// console.log(merge(newData));\n\n\tconst bars = merge(newData)\n\t\t// .filter(d => isDefined(d.y))\n\t\t.map(d => {\n\t\t\t// let baseValue = yScale.invert(getBase(xScale, yScale, d.datum));\n\t\t\tlet y = yScale(d[1]);\n\t\t\t/* let h = isDefined(d.y0) && d.y0 !== 0 && !isNaN(d.y0)\n\t\t\t\t\t? yScale(d.y0) - y\n\t\t\t\t\t: getBase(xScale, yScale, d.datum) - yScale(d.y)*/\n\t\t\tlet h = getBase(xScale, yScale, d.data) - yScale(d[1] - d[0]);\n\t\t\t// console.log(d.y, yScale.domain(), yScale.range())\n\t\t\t// let h = ;\n\t\t\t// if (d.y < 0) h = -h;\n\t\t\t// console.log(d, y, h)\n\t\t\tif (h < 0) {\n\t\t\t\ty = y + h;\n\t\t\t\th = -h;\n\t\t\t}\n\t\t\t// console.log(d.data.i, Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)))\n\t\t\t/* console.log(d.series, d.datum.date, d.x,\n\t\t\t\t\tgetBase(xScale, yScale, d.datum), `d.y=${d.y}, d.y0=${d.y0}, y=${y}, h=${h}`)*/\n\t\t\treturn {\n\t\t\t\t...d.data.appearance,\n\t\t\t\t// series: d.series,\n\t\t\t\t// i: d.x,\n\t\t\t\tx: Math.round(xScale(d.data.x) - width / 2),\n\t\t\t\ty: y,\n\t\t\t\tgroupOffset: Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)),\n\t\t\t\tgroupWidth: Math.round(eachBarWidth),\n\t\t\t\toffset: Math.round(offset),\n\t\t\t\theight: h,\n\t\t\t\twidth: barWidth,\n\t\t\t};\n\t\t})\n\t\t.filter(bar => !isNaN(bar.y));\n\n\treturn after(bars);\n}\n\nexport default StackedBarSeries;\n"]}