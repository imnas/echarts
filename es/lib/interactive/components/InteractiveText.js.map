{"version":3,"sources":["../../../../../src/lib/interactive/components/InteractiveText.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","isDefined","noop","hexToRGBA","InteractiveText","props","calculateTextWidth","renderSVG","bind","drawOnCanvas","isHover","moreProps","onHover","textWidth","helper","rect","mouseXY","x","y","width","height","nextProps","text","fontStyle","fontWeight","fontSize","fontFamily","ctx","bgFill","bgOpacity","textFill","font","measureText","selected","fillStyle","beginPath","fillRect","strokeStyle","strokeRect","textBaseline","textAlign","fillText","Error","interactiveCursorClass","onUnHover","onDragStart","onDrag","onDragComplete","position","xScale","yScale","chartConfig","xValue","yValue","propTypes","string","isRequired","number","oneOfType","func","defaultClassName","tolerance","bool","defaultProps","type","strokeWidth"],"mappings":"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","file":"InteractiveText.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport { isDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass InteractiveText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.calculateTextWidth = true;\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { onHover } = this.props;\n\n\t\tif (\n\t\t\tisDefined(onHover)\n\t\t\t&& isDefined(this.textWidth)\n\t\t\t&& !this.calculateTextWidth\n\t\t) {\n\t\t\tconst { rect } = helper(this.props, moreProps, this.textWidth);\n\t\t\tconst { mouseXY: [x, y] } = moreProps;\n\n\t\t\tif (\n\t\t\t\tx >= rect.x\n\t\t\t\t&& y >= rect.y\n\t\t\t\t&& x <= rect.x + rect.width\n\t\t\t\t&& y <= rect.y + rect.height\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.calculateTextWidth = (\n\t\t\tnextProps.text !== this.props.text\n\t\t\t|| nextProps.fontStyle !== this.props.fontStyle\n\t\t\t|| nextProps.fontWeight !== this.props.fontWeight\n\t\t\t|| nextProps.fontSize !== this.props.fontSize\n\t\t\t|| nextProps.fontFamily !== this.props.fontFamily\n\t\t);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tbgFill,\n\t\t\tbgOpacity,\n\t\t\ttextFill,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfontStyle,\n\t\t\tfontWeight,\n\t\t\ttext,\n\t\t} = this.props;\n\n\t\tif (this.calculateTextWidth) {\n\t\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\t\t\tconst { width } = ctx.measureText(text);\n\t\t\tthis.textWidth = width;\n\t\t\tthis.calculateTextWidth = false;\n\t\t}\n\n\t\tconst { selected } = this.props;\n\n\t\tconst { x, y, rect } = helper(this.props, moreProps, this.textWidth);\n\n\t\tctx.fillStyle = hexToRGBA(bgFill, bgOpacity);\n\n\t\tctx.beginPath();\n\t\tctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n\n\t\tif (selected) {\n\t\t\tctx.strokeStyle = textFill;\n\t\t\tctx.strokeRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\n\t\tctx.fillStyle = textFill;\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.textAlign = \"center\";\n\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n\t\tctx.beginPath();\n\t\tctx.fillText(text, x, y);\n\t}\n\trenderSVG() {\n\t\tthrow new Error(\"svg not implemented\");\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onHover, onUnHover } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nfunction helper(props, moreProps, textWidth) {\n\tconst { position, fontSize } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst [xValue, yValue] = position;\n\tconst x = xScale(xValue);\n\tconst y = yScale(yValue);\n\n\tconst rect = {\n\t\tx: x - textWidth / 2 - fontSize,\n\t\ty: y - fontSize,\n\t\twidth: textWidth + fontSize * 2,\n\t\theight: fontSize * 2,\n\t};\n\n\treturn {\n\t\tx, y, rect\n\t};\n}\n\nInteractiveText.propTypes = {\n\tbgFill: PropTypes.string.isRequired,\n\tbgOpacity: PropTypes.number.isRequired,\n\n\ttextFill: PropTypes.string.isRequired,\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfontWeight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]).isRequired,\n\tfontStyle: PropTypes.string.isRequired,\n\n\ttext: PropTypes.string.isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\tinteractiveCursorClass: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nInteractiveText.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\ttype: \"SD\", // standard dev\n\tfontWeight: \"normal\", // standard dev\n\n\tstrokeWidth: 1,\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default InteractiveText;"]}