{"version":3,"sources":["../../../../src/lib/series/OverlayBarSeries.js"],"names":["merge","React","Component","PropTypes","GenericChartComponent","getAxisCanvas","drawOnCanvas2","getBarsSVG2","isDefined","isNotDefined","first","last","functor","OverlayBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","xAccessor","xScale","yScale","chartConfig","plotData","bars","getBars","clip","propTypes","baseAt","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","widthRatio","opacity","fill","string","className","arrayOf","array","defaultProps","range","getClassName","getFill","getBase","width","Math","abs","bw","length","barWidth","round","offset","map","innerBars","eachYAccessor","i","yValue","d","undefined","xValue","x","y","filter","b","h","height"],"mappings":"AAAA;;;;;;;;;;AAEA,SAASA,KAAT,QAAsB,UAAtB;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,OAA/C,QAA8D,UAA9D;;IAEMC,gB;;;AACL,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACZA,KADY;;AAElB,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAHkB;AAIlB;;;;+BACYE,G,EAAKC,S,EAAW;AAAA,OACpBC,SADoB,GACN,KAAKN,KADC,CACpBM,SADoB;AAAA,OAEpBC,SAFoB,GAENF,SAFM,CAEpBE,SAFoB;AAAA,OAGpBC,MAHoB,GAG0BH,SAH1B,CAGpBG,MAHoB;AAAA,OAGGC,MAHH,GAG0BJ,SAH1B,CAGZK,WAHY,CAGGD,MAHH;AAAA,OAGaE,QAHb,GAG0BN,SAH1B,CAGaM,QAHb;;;AAK5B,OAAMC,OAAOC,QAAQ,KAAKb,KAAb,EAAoBO,SAApB,EAA+BD,SAA/B,EAA0CE,MAA1C,EAAkDC,MAAlD,EAA0DE,QAA1D,CAAb;;AAEAnB,iBAAc,KAAKQ,KAAnB,EAA0BI,GAA1B,EAA+BQ,IAA/B;AACA;;;4BACSP,S,EAAW;AAAA,OACZC,SADY,GACE,KAAKN,KADP,CACZM,SADY;AAAA,OAEZC,SAFY,GAEEF,SAFF,CAEZE,SAFY;AAAA,OAGZC,MAHY,GAGkCH,SAHlC,CAGZG,MAHY;AAAA,OAGWC,MAHX,GAGkCJ,SAHlC,CAGJK,WAHI,CAGWD,MAHX;AAAA,OAGqBE,QAHrB,GAGkCN,SAHlC,CAGqBM,QAHrB;;;AAKpB,OAAMC,OAAOC,QAAQ,KAAKb,KAAb,EAAoBO,SAApB,EAA+BD,SAA/B,EAA0CE,MAA1C,EAAkDC,MAAlD,EAA0DE,QAA1D,CAAb;AACA,UAAO;AAAA;AAAA,MAAG,WAAU,8BAAb;AACLlB,gBAAY,KAAKO,KAAjB,EAAwBY,IAAxB;AADK,IAAP;AAGA;;;2BACQ;AAAA,OACAE,IADA,GACS,KAAKd,KADd,CACAc,IADA;;;AAGR,UAAO,oBAAC,qBAAD;AACN,aAAS,KAAKb,SADR;AAEN,kBAAcV,aAFR;AAGN,gBAAY,KAAKY,YAHX;AAIN,UAAMW,IAJA;AAKN,YAAQ,CAAC,KAAD;AALF,KAAP;AAOA;;;;EAnC6B1B,S;;AAsC/BW,iBAAiBgB,SAAjB,GAA6B;AAC5BC,SAAQ3B,UAAU4B,SAAV,CAAoB,CAC3B5B,UAAU6B,MADiB,EAE3B7B,UAAU8B,IAFiB,CAApB,EAGLC,UAJyB;AAK5BC,YAAWhC,UAAUiC,KAAV,CAAgB,CAAC,IAAD,EAAO,MAAP,CAAhB,EAAgCF,UALf;AAM5BG,SAAQlC,UAAUmC,IAAV,CAAeJ,UANK;AAO5BK,aAAYpC,UAAU6B,MAAV,CAAiBE,UAPD;AAQ5BM,UAASrC,UAAU6B,MAAV,CAAiBE,UARE;AAS5BO,OAAMtC,UAAU4B,SAAV,CAAoB,CACzB5B,UAAU8B,IADe,EACT9B,UAAUuC,MADD,CAApB,EAEHR,UAXyB;AAY5BS,YAAWxC,UAAU4B,SAAV,CAAoB,CAC9B5B,UAAU8B,IADoB,EACd9B,UAAUuC,MADI,CAApB,EAERR,UAdyB;AAe5Bb,YAAWlB,UAAU8B,IAfO;AAgB5Bb,YAAWjB,UAAUyC,OAAV,CAAkBzC,UAAU8B,IAA5B,CAhBiB;AAiB5BX,SAAQnB,UAAU8B,IAjBU;AAkB5BV,SAAQpB,UAAU8B,IAlBU;AAmB5BR,WAAUtB,UAAU0C,KAnBQ;AAoB5BjB,OAAMzB,UAAUmC,IAAV,CAAeJ;AApBO,CAA7B;;AAuBArB,iBAAiBiC,YAAjB,GAAgC;AAC/BhB,SAAQ,gBAACR,MAAD,EAASC,MAAT,CAAe,QAAf;AAAA,SAA4Bb,MAAMa,OAAOwB,KAAP,EAAN,CAA5B;AAAA,EADuB;AAE/BZ,YAAW,IAFoB;AAG/BQ,YAAW,KAHoB;AAI/BN,SAAQ,KAJuB;AAK/BI,OAAM,SALyB;AAM/BD,UAAS,CANsB;AAO/BD,aAAY,GAPmB;AAQ/BX,OAAM;AARyB,CAAhC;;AAWA,SAASD,OAAT,CAAiBb,KAAjB,EAAwBO,SAAxB,EAAmCD,SAAnC,EAA8CE,MAA9C,EAAsDC,MAAtD,EAA8DE,QAA9D,EAAwE;AAAA,KAC/DK,MAD+D,GACfhB,KADe,CAC/DgB,MAD+D;AAAA,KACvDa,SADuD,GACf7B,KADe,CACvD6B,SADuD;AAAA,KAC5CF,IAD4C,GACf3B,KADe,CAC5C2B,IAD4C;AAAA,KACtCJ,MADsC,GACfvB,KADe,CACtCuB,MADsC;AAAA,KAC9BE,UAD8B,GACfzB,KADe,CAC9ByB,UAD8B;;;AAGvE,KAAMS,eAAepC,QAAQ+B,SAAR,CAArB;AACA,KAAMM,UAAUrC,QAAQ6B,IAAR,CAAhB;AACA,KAAMS,UAAUtC,QAAQkB,MAAR,CAAhB;;AAEA,KAAMqB,QAAQC,KAAKC,GAAL,CAAS/B,OAAOD,UAAUV,KAAKc,QAAL,CAAV,CAAP,IAAoCH,OAAOD,UAAUX,MAAMe,QAAN,CAAV,CAAP,CAA7C,CAAd;;AAGA,KAAM6B,KAAMH,SAAS1B,SAAS8B,MAAT,GAAkB,CAA3B,IAAgChB,UAA5C;AACA,KAAMiB,WAAWJ,KAAKK,KAAL,CAAWH,EAAX,CAAjB;AACA,KAAMI,SAAUF,aAAa,CAAb,GAAiB,CAAjB,GAAqB,MAAMF,EAA3C;;AAEA;;AAEA,KAAM5B,OAAOD,SACXkC,GADW,CACP,aAAK;AACT;AACA,MAAIC,YAAYxC,UAAUuC,GAAV,CAAc,UAACE,aAAD,EAAgBC,CAAhB,EAAsB;AACnD,OAAMC,SAASF,cAAcG,CAAd,CAAf;AACA,OAAIvD,aAAasD,MAAb,CAAJ,EAA0B,OAAOE,SAAP;;AAE1B,OAAMC,SAAS7C,UAAU2C,CAAV,CAAf;AACA,OAAMG,IAAIf,KAAKK,KAAL,CAAWnC,OAAO4C,MAAP,CAAX,IAA6BR,MAAvC;AACA,OAAMU,IAAI7C,OAAOwC,MAAP,CAAV;AACA;AACA,UAAO;AACNZ,WAAOK,QADD;AAENW,OAAGA,CAFG;AAGNC,OAAGA,CAHG;AAINzB,eAAWK,aAAagB,CAAb,EAAgBF,CAAhB,CAJL;AAKNzB,YAAQA,SAASY,QAAQe,CAAR,EAAWF,CAAX,CAAT,GAAyB,MAL3B;AAMNrB,UAAMQ,QAAQe,CAAR,EAAWF,CAAX,CANA;AAONA;AAPM,IAAP;AASA,GAjBe,EAiBbO,MAjBa,CAiBN;AAAA,UAAU7D,UAAUuD,MAAV,CAAV;AAAA,GAjBM,CAAhB;;AAmBA,MAAIO,IAAIpB,QAAQ5B,MAAR,EAAgBC,MAAhB,EAAwByC,CAAxB,CAAR;AACA,MAAIO,UAAJ;AACA,OAAK,IAAIT,IAAIF,UAAUL,MAAV,GAAmB,CAAhC,EAAmCO,KAAK,CAAxC,EAA2CA,GAA3C,EAAgD;AAC/CS,OAAID,IAAIV,UAAUE,CAAV,EAAaM,CAArB;AACA,OAAIG,IAAI,CAAR,EAAW;AACVX,cAAUE,CAAV,EAAaM,CAAb,GAAiBE,CAAjB;AACAC,QAAI,CAAC,CAAD,GAAKA,CAAT;AACA;AACDX,aAAUE,CAAV,EAAaU,MAAb,GAAsBD,CAAtB;AACAD,OAAIV,UAAUE,CAAV,EAAaM,CAAjB;AACA;AACD,SAAOR,SAAP;AACA,EAlCW,CAAb;;AAoCA,QAAO5D,MAAM0B,IAAN,CAAP;AACA;;AAED,eAAeb,gBAAf","file":"OverlayBarSeries.js","sourcesContent":["\"use strict\";\n\nimport { merge } from \"d3-array\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { drawOnCanvas2, getBarsSVG2 } from \"./StackedBarSeries\";\nimport { isDefined, isNotDefined, first, last, functor } from \"../utils\";\n\nclass OverlayBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst bars = getBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\n\t\tdrawOnCanvas2(this.props, ctx, bars);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst bars = getBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\t\treturn <g className=\"react-stockcharts-bar-series\">\n\t\t\t{getBarsSVG2(this.props, bars)}\n\t\t</g>;\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tclip={clip}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nOverlayBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidthRatio: PropTypes.number.isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\txAccessor: PropTypes.func,\n\tyAccessor: PropTypes.arrayOf(PropTypes.func),\n\txScale: PropTypes.func,\n\tyScale: PropTypes.func,\n\tplotData: PropTypes.array,\n\tclip: PropTypes.bool.isRequired,\n};\n\nOverlayBarSeries.defaultProps = {\n\tbaseAt: (xScale, yScale/* , d*/) => first(yScale.range()),\n\tdirection: \"up\",\n\tclassName: \"bar\",\n\tstroke: false,\n\tfill: \"#4682B4\",\n\topacity: 1,\n\twidthRatio: 0.5,\n\tclip: true,\n};\n\nfunction getBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n\tconst { baseAt, className, fill, stroke, widthRatio } = props;\n\n\tconst getClassName = functor(className);\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\n\tconst width = Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData))));\n\n\n\tconst bw = (width / (plotData.length - 1) * widthRatio);\n\tconst barWidth = Math.round(bw);\n\tconst offset = (barWidth === 1 ? 0 : 0.5 * bw);\n\n\t// console.log(xScale.domain(), yScale.domain());\n\n\tconst bars = plotData\n\t\t.map(d => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet innerBars = yAccessor.map((eachYAccessor, i) => {\n\t\t\t\tconst yValue = eachYAccessor(d);\n\t\t\t\tif (isNotDefined(yValue)) return undefined;\n\n\t\t\t\tconst xValue = xAccessor(d);\n\t\t\t\tconst x = Math.round(xScale(xValue)) - offset;\n\t\t\t\tconst y = yScale(yValue);\n\t\t\t\t// console.log(yValue, y, xValue, x)\n\t\t\t\treturn {\n\t\t\t\t\twidth: barWidth,\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y,\n\t\t\t\t\tclassName: getClassName(d, i),\n\t\t\t\t\tstroke: stroke ? getFill(d, i) : \"none\",\n\t\t\t\t\tfill: getFill(d, i),\n\t\t\t\t\ti,\n\t\t\t\t};\n\t\t\t}).filter(yValue => isDefined(yValue));\n\n\t\t\tlet b = getBase(xScale, yScale, d);\n\t\t\tlet h;\n\t\t\tfor (let i = innerBars.length - 1; i >= 0; i--) {\n\t\t\t\th = b - innerBars[i].y;\n\t\t\t\tif (h < 0) {\n\t\t\t\t\tinnerBars[i].y = b;\n\t\t\t\t\th = -1 * h;\n\t\t\t\t}\n\t\t\t\tinnerBars[i].height = h;\n\t\t\t\tb = innerBars[i].y;\n\t\t\t}\n\t\t\treturn innerBars;\n\t\t});\n\n\treturn merge(bars);\n}\n\nexport default OverlayBarSeries;\n"]}