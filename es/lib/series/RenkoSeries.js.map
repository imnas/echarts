{"version":3,"sources":["../../../../src/lib/series/RenkoSeries.js"],"names":["React","Component","PropTypes","GenericChartComponent","getAxisCanvas","isDefined","RenkoSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","yAccessor","candles","getRenko","clip","map","each","idx","className","fill","x","y","width","height","propTypes","classNames","shape","up","string","down","stroke","partial","func","isRequired","bool","defaultProps","open","d","high","low","close","renko","forEach","beginPath","strokeStyle","fillStyle","rect","closePath","length","candleWidth","filter","ohlc","Math","max","abs","svgfill","fullyFormed"],"mappings":"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","file":"RenkoSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined } from \"../utils\";\n\nclass RenkoSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor);\n\n\t\tdrawOnCanvas(ctx, candles);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor)\n\t\t\t.map((each, idx) => (<rect key={idx} className={each.className}\n\t\t\t\tfill={each.fill}\n\t\t\t\tx={each.x}\n\t\t\t\ty={each.y}\n\t\t\t\twidth={each.width}\n\t\t\t\theight={each.height} />));\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<g className=\"candle\">\n\t\t\t\t\t{candles}\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nRenkoSeries.propTypes = {\n\tclassNames: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string\n\t}),\n\tstroke: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string\n\t}),\n\tfill: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string,\n\t\tpartial: PropTypes.string\n\t}),\n\tyAccessor: PropTypes.func.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nRenkoSeries.defaultProps = {\n\tclassNames: {\n\t\tup: \"up\",\n\t\tdown: \"down\"\n\t},\n\tstroke: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tfill: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#E60000\",\n\t\tpartial: \"#4682B4\",\n\t},\n\tyAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, renko) {\n\trenko.forEach(d => {\n\t\tctx.beginPath();\n\n\t\tctx.strokeStyle = d.stroke;\n\t\tctx.fillStyle = d.fill;\n\n\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\tctx.closePath();\n\t\tctx.fill();\n\t});\n}\n\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\n\tconst { classNames, fill } = props;\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst candleWidth = (width / (plotData.length - 1));\n\tconst candles = plotData\n\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t.map(d => {\n\t\t\tconst ohlc = yAccessor(d);\n\t\t\tconst x = xScale(xAccessor(d)) - 0.5 * candleWidth,\n\t\t\t\ty = yScale(Math.max(ohlc.open, ohlc.close)),\n\t\t\t\theight = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\n\t\t\t\tclassName = (ohlc.open <= ohlc.close) ? classNames.up : classNames.down;\n\n\t\t\tconst svgfill = d.fullyFormed\n\t\t\t\t? (ohlc.open <= ohlc.close ? fill.up : fill.down)\n\t\t\t\t: fill.partial;\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tfill: svgfill,\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\theight: height,\n\t\t\t\twidth: candleWidth,\n\t\t\t};\n\t\t});\n\treturn candles;\n}\n\nexport default RenkoSeries;\n"]}