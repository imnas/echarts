{"version":3,"sources":["../../../src/lib/series/StraightLine.js"],"names":["StraightLine","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","type","stroke","strokeWidth","opacity","strokeDasharray","yValue","xValue","xScale","chartConfig","yScale","width","height","beginPath","strokeStyle","lineWidth","getLineCoordinates","x1","y1","x2","y2","setLineDash","split","moveTo","lineTo","className","lineCoordinates","propTypes","string","oneOf","number","isRequired","propName","Error","defaultProps"],"mappings":"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","file":"StraightLine.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { hexToRGBA, isDefined, isNotDefined, strokeDashTypes, getStrokeDasharray } from \"../utils\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nclass StraightLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { type, stroke, strokeWidth, opacity, strokeDasharray } = this.props;\n\t\tconst { yValue, xValue } = this.props;\n\t\tconst { xScale } = moreProps;\n\t\tconst { chartConfig: { yScale, width, height } } = moreProps;\n\n\t\tctx.beginPath();\n\n\t\tctx.strokeStyle = hexToRGBA(stroke, opacity);\n\t\tctx.lineWidth = strokeWidth;\n\n\t\tconst { x1, y1, x2, y2 } = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height);\n\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { width, height } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\t\tconst { className } = this.props;\n\t\tconst { type, stroke, strokeWidth, opacity, strokeDasharray } = this.props;\n\t\tconst { yValue, xValue } = this.props;\n\n\t\tconst lineCoordinates = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height);\n\n\t\t/*\n\t\ttype === \"horizontal\"\n\t\t\t? { x1: xScale(first), y1: yScale(yValue), x2: xScale(last), y2: yScale(yValue) }\n\t\t\t: { x1: xScale(xValue), y1: yScale(0), x2: xScale(xValue), y2: yScale(height) };*/\n\n\t\treturn (\n\t\t\t<line\n\t\t\t\tclassName={className}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\topacity={opacity}\n\t\t\t\t{...lineCoordinates}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height) {\n\treturn type === \"horizontal\"\n\t\t? { x1: 0, y1: yScale(yValue), x2: width, y2: yScale(yValue) }\n\t\t: { x1: xScale(xValue), y1: 0, x2: xScale(xValue), y2: height };\n}\n\nStraightLine.propTypes = {\n\tclassName: PropTypes.string,\n\ttype: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n\tstroke: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\topacity: PropTypes.number.isRequired,\n\tyValue: function(props, propName/* , componentName */) {\n\t\tif (props.type === \"vertical\" && isDefined(props[propName])) return new Error(\"Do not define `yValue` when type is `vertical`, define the `xValue` prop\");\n\t\tif (props.type === \"horizontal\" && isNotDefined(props[propName])) return new Error(\"when type = `horizontal` `yValue` is required\");\n\t\t// if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `yValue` accepts a number\");\n\t},\n\txValue: function(props, propName/* , componentName */) {\n\t\tif (props.type === \"horizontal\" && isDefined(props[propName])) return new Error(\"Do not define `xValue` when type is `horizontal`, define the `yValue` prop\");\n\t\tif (props.type === \"vertical\" && isNotDefined(props[propName])) return new Error(\"when type = `vertical` `xValue` is required\");\n\t\t// if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `xValue` accepts a number\");\n\t},\n};\n\nStraightLine.defaultProps = {\n\tclassName: \"line \",\n\ttype: \"horizontal\",\n\tstroke: \"#000000\",\n\topacity: 0.5,\n\tstrokeWidth: 1,\n\tstrokeDasharray: \"Solid\",\n};\n\nexport default StraightLine;\n"]}