{"version":3,"sources":["../../../src/lib/indicator/elderImpulse.js"],"names":["macdSource","emaSource","base","type","ALGORITHM_TYPE","stroke","fill","undefined","underlyingAlgorithm","windowSize","undefinedValue","accumulator","prev","curr","Error","prevMACDDivergence","divergence","currMACDDivergence","prevEMA","currEMA","mergedAlgorithm","algorithm","merge","datum","indicator","elderImpulse","data","options","newData","x","arguments","length"],"mappings":"AAAA;;;;;;;;kBASe,YAAW;;AAEzB,KAAIA,mBAAJ;AAAA,KAAgBC,kBAAhB;;AAEA,KAAMC,OAAO,+BACXC,IADW,CACNC,cADM;AAEZ;AAFY,EAGXC,MAHW,CAGJ,0CAAkBA,MAHd,EAIXC,IAJW,CAINC,SAJM,CAAb;;AAMA,KAAMC,sBAAsB,4BAC1BC,UAD0B,CACf,CADe,EAE1BC,cAF0B,CAEX,SAFW,EAG1BC,WAH0B,CAGd,gBAAkB;AAAA;AAAA,MAAhBC,IAAgB;AAAA,MAAVC,IAAU;;AAC9B,MAAI,yBAAab,UAAb,CAAJ,EAA8B,MAAM,IAAIc,KAAJ,iCAAwCV,cAAxC,iBAAN;AAC9B,MAAI,yBAAaH,SAAb,CAAJ,EAA6B,MAAM,IAAIa,KAAJ,gCAAuCV,cAAvC,iBAAN;;AAE7B,MAAI,sBAAUJ,WAAWY,IAAX,CAAV,KAA+B,sBAAUX,UAAUW,IAAV,CAAV,CAAnC,EAA+D;AAC9D,OAAMG,qBAAqBf,WAAWY,IAAX,EAAiBI,UAA5C;AACA,OAAMC,qBAAqBjB,WAAWa,IAAX,EAAiBG,UAA5C;;AAEA,OAAME,UAAUjB,UAAUW,IAAV,CAAhB;AACA,OAAMO,UAAUlB,UAAUY,IAAV,CAAhB;;AAEA,OAAII,sBAAsBF,kBAAtB,IACAI,WAAWD,OADf,EACwB,OAAO,IAAP;;AAExB,OAAID,sBAAsBF,kBAAtB,IACAI,WAAWD,OADf,EACwB,OAAO,MAAP;AACxB;AACD,SAAO,SAAP;AACA,EArB0B,CAA5B;;AAuBA,KAAME,kBAAkB,oBACtBC,SADsB,CACZb,mBADY,EAEtBc,KAFsB,CAEhB,UAACC,KAAD,EAAQC,SAAR,EAAsB;AAAED,QAAME,YAAN,GAAqBD,SAArB;AAAiC,EAFzC,CAAxB;;AAIA;AACA,KAAIA,YAAY,SAAZA,SAAY,CAASE,IAAT,EAA0C;AAAA,MAA3BC,OAA2B,uEAAjB,EAAEL,OAAO,IAAT,EAAiB;;AACzD,MAAMM,UAAUD,QAAQL,KAAR,GACbF,gBAAgBM,IAAhB,CADa,GAEblB,oBAAoBkB,IAApB,CAFH;;AAIA,SAAOE,OAAP;AACA,EAND;AAOAJ,WAAUxB,UAAV,GAAuB,UAAS6B,CAAT,EAAY;AAClC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO/B,UAAP;AACvBA,eAAa6B,CAAb;AACA,SAAOL,SAAP;AACA,EAJD;AAKAA,WAAUvB,SAAV,GAAsB,UAAS4B,CAAT,EAAY;AACjC,MAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO9B,SAAP;AACvBA,cAAY4B,CAAZ;AACA,SAAOL,SAAP;AACA,EAJD;AAKA,oBAAOA,SAAP,EAAkBtB,IAAlB,EAAwB,IAAxB,EAA8B,MAA9B,EAAsC,MAAtC,EAA8C,QAA9C;AACA;AACA,oBAAOsB,SAAP,EAAkBJ,eAAlB,EAAmC,OAAnC,EAA4C,eAA5C;;AAEA,QAAOI,SAAP;AACA,C;;AAnED;;AAEA;;AACA;;;;;;AAEA,IAAMpB,iBAAiB,cAAvB","file":"elderImpulse.js","sourcesContent":["\"use strict\";\n\nimport { rebind, isDefined, isNotDefined, merge, slidingWindow } from \"../utils\";\n\nimport { ElderImpulse as appearanceOptions } from \"./defaultOptionsForAppearance\";\nimport baseIndicator from \"./baseIndicator\";\n\nconst ALGORITHM_TYPE = \"ElderImpulse\";\n\nexport default function() {\n\n\tlet macdSource, emaSource;\n\n\tconst base = baseIndicator()\n\t\t.type(ALGORITHM_TYPE)\n\t\t// .stroke(d => stroke[d.elderImpulse])\n\t\t.stroke(appearanceOptions.stroke)\n\t\t.fill(undefined);\n\n\tconst underlyingAlgorithm = slidingWindow()\n\t\t.windowSize(2)\n\t\t.undefinedValue(\"neutral\")\n\t\t.accumulator(([prev, curr]) => {\n\t\t\tif (isNotDefined(macdSource)) throw new Error(`macdSource not defined for ${ALGORITHM_TYPE} calculator`);\n\t\t\tif (isNotDefined(emaSource)) throw new Error(`emaSource not defined for ${ALGORITHM_TYPE} calculator`);\n\n\t\t\tif (isDefined(macdSource(prev)) && isDefined(emaSource(prev))) {\n\t\t\t\tconst prevMACDDivergence = macdSource(prev).divergence;\n\t\t\t\tconst currMACDDivergence = macdSource(curr).divergence;\n\n\t\t\t\tconst prevEMA = emaSource(prev);\n\t\t\t\tconst currEMA = emaSource(curr);\n\n\t\t\t\tif (currMACDDivergence >= prevMACDDivergence\n\t\t\t\t\t&& currEMA >= prevEMA) return \"up\";\n\n\t\t\t\tif (currMACDDivergence <= prevMACDDivergence\n\t\t\t\t\t&& currEMA <= prevEMA) return \"down\";\n\t\t\t}\n\t\t\treturn \"neutral\";\n\t\t});\n\n\tconst mergedAlgorithm = merge()\n\t\t.algorithm(underlyingAlgorithm)\n\t\t.merge((datum, indicator) => { datum.elderImpulse = indicator; });\n\n\t// eslint-disable-next-line prefer-const\n\tlet indicator = function(data, options = { merge: true }) {\n\t\tconst newData = options.merge\n\t\t\t? mergedAlgorithm(data)\n\t\t\t: underlyingAlgorithm(data);\n\n\t\treturn newData;\n\t};\n\tindicator.macdSource = function(x) {\n\t\tif (!arguments.length) return macdSource;\n\t\tmacdSource = x;\n\t\treturn indicator;\n\t};\n\tindicator.emaSource = function(x) {\n\t\tif (!arguments.length) return emaSource;\n\t\temaSource = x;\n\t\treturn indicator;\n\t};\n\trebind(indicator, base, \"id\", \"echo\", \"type\", \"stroke\");\n\t// rebind(indicator, underlyingAlgorithm, \"windowSize\", \"movingAverageType\", \"multiplier\", \"source\");\n\trebind(indicator, mergedAlgorithm, \"merge\", \"skipUndefined\");\n\n\treturn indicator;\n}\n"]}