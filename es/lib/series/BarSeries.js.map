{"version":3,"sources":["../../../../src/lib/series/BarSeries.js"],"names":["React","Component","PropTypes","GenericChartComponent","getAxisCanvas","StackedBarSeries","drawOnCanvasHelper","drawOnCanvas2","getBarsSVG2","svgHelper","identityStack","functor","BarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","swapScales","xAccessor","bars","getBars","clip","propTypes","baseAt","oneOfType","number","func","stroke","bool","width","yAccessor","isRequired","opacity","fill","string","className","defaultProps","xScale","plotData","yScale","chartConfig","getFill","getBase","widthFunctor","offset","Math","floor","map","yValue","d","y","x","round","h","height"],"mappings":"AAAA;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAEA,OAAOC,gBAAP,IACCC,kBADD,EAECC,aAFD,EAGCC,WAHD,EAICC,SAJD,EAKCC,aALD,QAMO,oBANP;;AAQA,SAASC,OAAT,QAAwB,UAAxB;;IAEMC,S;;;AACL,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACZA,KADY;;AAElB,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAHkB;AAIlB;;;;+BACYE,G,EAAKC,S,EAAW;;AAE5B,OAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AAAA,QAClBC,SADkB,GACJF,SADI,CAClBE,SADkB;;AAE1Bd,uBAAmBW,GAAnB,EAAwB,KAAKJ,KAA7B,EAAoCK,SAApC,EAA+CE,SAA/C,EAA0DV,aAA1D;AACA,IAHD,MAGO;AACN,QAAMW,OAAOC,QAAQ,KAAKT,KAAb,EAAoBK,SAApB,CAAb;AACAX,kBAAc,KAAKM,KAAnB,EAA0BI,GAA1B,EAA+BI,IAA/B;AACA;AAED;;;4BACSH,S,EAAW;AACpB,OAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AAAA,QAClBC,SADkB,GACJF,SADI,CAClBE,SADkB;;AAE1B,WAAO;AAAA;AAAA;AAAIX,eAAU,KAAKI,KAAf,EAAsBK,SAAtB,EAAiCE,SAAjC,EAA4CV,aAA5C;AAAJ,KAAP;AACA,IAHD,MAGO;AACN,QAAMW,OAAOC,QAAQ,KAAKT,KAAb,EAAoBK,SAApB,CAAb;AACA,WAAO;AAAA;AAAA;AAAIV,iBAAY,KAAKK,KAAjB,EAAwBQ,IAAxB;AAAJ,KAAP;AACA;AAED;;;2BACQ;AAAA,OACAE,IADA,GACS,KAAKV,KADd,CACAU,IADA;;;AAGR,UAAO,oBAAC,qBAAD;AACN,UAAMA,IADA;AAEN,aAAS,KAAKT,SAFR;;AAIN,kBAAcV,aAJR;AAKN,gBAAY,KAAKY,YALX;;AAON,YAAQ,CAAC,KAAD;AAPF,KAAP;AASA;;;;EAvCsBf,S;;AA0CxBW,UAAUY,SAAV,GAAsB;AACrBC,SAAQvB,UAAUwB,SAAV,CAAoB,CAC3BxB,UAAUyB,MADiB,EAE3BzB,UAAU0B,IAFiB,CAApB,CADa;AAKrBC,SAAQ3B,UAAU4B,IALG;AAMrBC,QAAO7B,UAAUwB,SAAV,CAAoB,CAC1BxB,UAAUyB,MADgB,EAE1BzB,UAAU0B,IAFgB,CAApB,CANc;AAUrBI,YAAW9B,UAAU0B,IAAV,CAAeK,UAVL;AAWrBC,UAAShC,UAAUyB,MAXE;AAYrBQ,OAAMjC,UAAUwB,SAAV,CAAoB,CACzBxB,UAAU0B,IADe,EACT1B,UAAUkC,MADD,CAApB,CAZe;AAerBC,YAAWnC,UAAUwB,SAAV,CAAoB,CAC9BxB,UAAU0B,IADoB,EACd1B,UAAUkC,MADI,CAApB,CAfU;AAkBrBb,OAAMrB,UAAU4B,IAlBK;AAmBrBX,aAAYjB,UAAU4B;AAnBD,CAAtB;;AAuBAlB,UAAU0B,YAAV,GAAyBjC,iBAAiBiC,YAA1C;;AAEA,eAAe1B,SAAf;;AAEA;;;;;;;;;;AAUA,SAASU,OAAT,CAAiBT,KAAjB,EAAwBK,SAAxB,EAAmC;AAAA,KAC1BO,MAD0B,GACUZ,KADV,CAC1BY,MAD0B;AAAA,KAClBU,IADkB,GACUtB,KADV,CAClBsB,IADkB;AAAA,KACZN,MADY,GACUhB,KADV,CACZgB,MADY;AAAA,KACJG,SADI,GACUnB,KADV,CACJmB,SADI;AAAA,KAE1BO,MAF0B,GAE+BrB,SAF/B,CAE1BqB,MAF0B;AAAA,KAElBnB,SAFkB,GAE+BF,SAF/B,CAElBE,SAFkB;AAAA,KAEPoB,QAFO,GAE+BtB,SAF/B,CAEPsB,QAFO;AAAA,KAEkBC,MAFlB,GAE+BvB,SAF/B,CAEGwB,WAFH,CAEkBD,MAFlB;;;AAIlC,KAAME,UAAUhC,QAAQwB,IAAR,CAAhB;AACA,KAAMS,UAAUjC,QAAQc,MAAR,CAAhB;;AAEA,KAAMoB,eAAelC,QAAQE,MAAMkB,KAAd,CAArB;;AAEA,KAAMA,QAAQc,aAAahC,KAAb,EAAoB;AACjC0B,gBADiC;AAEjCnB,sBAFiC;AAGjCoB;AAHiC,EAApB,CAAd;;AAMA;;;;AAIA,KAAMM,SAASC,KAAKC,KAAL,CAAW,MAAMjB,KAAjB,CAAf;;AAEA,KAAMV,OAAOmB,SACXS,GADW,CACP,aAAK;AACT,MAAMC,SAASlB,UAAUmB,CAAV,CAAf;AACA,MAAIC,IAAIX,OAAOS,MAAP,CAAR;;AAEA,MAAMG,IAAIN,KAAKO,KAAL,CAAWf,OAAOnB,UAAU+B,CAAV,CAAP,CAAX,IAAmCL,MAA7C;AACA,MAAIS,IAAIX,QAAQL,MAAR,EAAgBE,MAAhB,EAAwBU,CAAxB,IAA6BV,OAAOS,MAAP,CAArC;;AAEA,MAAIK,IAAI,CAAR,EAAW;AACVH,OAAIA,IAAIG,CAAR;AACAA,OAAI,CAACA,CAAL;AACA;;AAED,SAAO;AACN;AACAF,OAFM;AAGND,MAAGL,KAAKO,KAAL,CAAWF,CAAX,CAHG;AAINI,WAAQT,KAAKO,KAAL,CAAWC,CAAX,CAJF;AAKNxB,UAAOe,SAAS,CALV;AAMNX,SAAMQ,QAAQQ,CAAR,EAAW,CAAX,CANA;AAONtB,WAAQA,SAASc,QAAQQ,CAAR,EAAW,CAAX,CAAT,GAAyB;AAP3B,GAAP;AASA,EAtBW,CAAb;;AAwBA,QAAO9B,IAAP;AACA","file":"BarSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport StackedBarSeries, {\n\tdrawOnCanvasHelper,\n\tdrawOnCanvas2,\n\tgetBarsSVG2,\n\tsvgHelper,\n\tidentityStack\n} from \"./StackedBarSeries\";\n\nimport { functor } from \"../utils\";\n\nclass BarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\n\t\tif (this.props.swapScales) {\n\t\t\tconst { xAccessor } = moreProps;\n\t\t\tdrawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, identityStack);\n\t\t} else {\n\t\t\tconst bars = getBars(this.props, moreProps);\n\t\t\tdrawOnCanvas2(this.props, ctx, bars);\n\t\t}\n\n\t}\n\trenderSVG(moreProps) {\n\t\tif (this.props.swapScales) {\n\t\t\tconst { xAccessor } = moreProps;\n\t\t\treturn <g>{svgHelper(this.props, moreProps, xAccessor, identityStack)}</g>;\n\t\t} else {\n\t\t\tconst bars = getBars(this.props, moreProps);\n\t\t\treturn <g>{getBarsSVG2(this.props, bars)}</g>;\n\t\t}\n\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]),\n\tstroke: PropTypes.bool,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]),\n\tyAccessor: PropTypes.func.isRequired,\n\topacity: PropTypes.number,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]),\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]),\n\tclip: PropTypes.bool,\n\tswapScales: PropTypes.bool,\n};\n\n\nBarSeries.defaultProps = StackedBarSeries.defaultProps;\n\nexport default BarSeries;\n\n/*\n Initially, this program was using StackedBarSeries.getBars\n to benefit from code reuse and having a single place that\n contains the logic for drawing all types of bar charts\n simple, grouped, horizontal, but turnes out\n making it highly cuztimizable also made it slow for the\n most simple case, a regular bar chart.\n This function contains just the necessary logic\n to create bars\n*/\nfunction getBars(props, moreProps) {\n\tconst { baseAt, fill, stroke, yAccessor } = props;\n\tconst { xScale, xAccessor, plotData, chartConfig: { yScale } } = moreProps;\n\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\n\tconst widthFunctor = functor(props.width);\n\n\tconst width = widthFunctor(props, {\n\t\txScale,\n\t\txAccessor,\n\t\tplotData\n\t});\n\n\t/*\n\tconst barWidth = Math.round(width);\n\tconst offset = Math.round(barWidth === 1 ? 0 : 0.5 * barWidth);\n\t*/\n\tconst offset = Math.floor(0.5 * width);\n\n\tconst bars = plotData\n\t\t.map(d => {\n\t\t\tconst yValue = yAccessor(d);\n\t\t\tlet y = yScale(yValue);\n\n\t\t\tconst x = Math.round(xScale(xAccessor(d))) - offset;\n\t\t\tlet h = getBase(xScale, yScale, d) - yScale(yValue);\n\n\t\t\tif (h < 0) {\n\t\t\t\ty = y + h;\n\t\t\t\th = -h;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// type: \"line\"\n\t\t\t\tx,\n\t\t\t\ty: Math.round(y),\n\t\t\t\theight: Math.round(h),\n\t\t\t\twidth: offset * 2,\n\t\t\t\tfill: getFill(d, 0),\n\t\t\t\tstroke: stroke ? getFill(d, 0) : \"none\",\n\t\t\t};\n\t\t});\n\n\treturn bars;\n}\n"]}