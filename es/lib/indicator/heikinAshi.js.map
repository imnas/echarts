{"version":3,"sources":["../../../../src/lib/indicator/heikinAshi.js"],"names":["heikinAshi","baseIndicator","rebind","merge","ALGORITHM_TYPE","base","type","accessor","d","ha","underlyingAlgorithm","mergedAlgorithm","algorithm","datum","indicator","data","options","Error"],"mappings":"AAAA;;;;AAEA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,UAA9B;;AAEA,IAAMC,iBAAiB,YAAvB;;AAEA,eAAe,YAAW;;AAEzB,KAAMC,OAAOJ,gBACXK,IADW,CACNF,cADM,EAEXG,QAFW,CAEF;AAAA,SAAKC,EAAEC,EAAP;AAAA,EAFE,CAAb;;AAIA,KAAMC,sBAAsBV,YAA5B;;AAEA,KAAMW,kBAAkBR,QACtBS,SADsB,CACZF,mBADY,EAEtBP,KAFsB,CAEhB,UAACU,KAAD,EAAQC,SAAR,EAAsB;AAC5B,sBAAYD,KAAZ,EAAsBC,SAAtB;AACA,EAJsB,CAAxB;;AAMA,KAAMA,YAAY,SAAZA,SAAY,CAASC,IAAT,EAA0C;AAAA,MAA3BC,OAA2B,uEAAjB,EAAEb,OAAO,IAAT,EAAiB;;AAC3D,MAAIa,QAAQb,KAAZ,EAAmB;AAClB,OAAI,CAACE,KAAKE,QAAL,EAAL,EAAsB,MAAM,IAAIU,KAAJ,yBAAgCb,cAAhC,yBAAN;AACtB,UAAOO,gBAAgBI,IAAhB,CAAP;AACA;AACD,SAAOL,oBAAoBK,IAApB,CAAP;AACA,EAND;;AAQAb,QAAOY,SAAP,EAAkBT,IAAlB,EAAwB,UAAxB,EAAoC,QAApC,EAA8C,MAA9C,EAAsD,MAAtD,EAA8D,MAA9D;AACA;AACAH,QAAOY,SAAP,EAAkBH,eAAlB,EAAmC,OAAnC;;AAEA,QAAOG,SAAP;AACA","file":"heikinAshi.js","sourcesContent":["\"use strict\";\n\nimport { heikinAshi } from \"../calculator\";\nimport baseIndicator from \"./baseIndicator\";\n\nimport { rebind, merge } from \"../utils\";\n\nconst ALGORITHM_TYPE = \"HeikinAshi\";\n\nexport default function() {\n\n\tconst base = baseIndicator()\n\t\t.type(ALGORITHM_TYPE)\n\t\t.accessor(d => d.ha);\n\n\tconst underlyingAlgorithm = heikinAshi();\n\n\tconst mergedAlgorithm = merge()\n\t\t.algorithm(underlyingAlgorithm)\n\t\t.merge((datum, indicator) => {\n\t\t\treturn { ...datum, ...indicator };\n\t\t});\n\n\tconst indicator = function(data, options = { merge: true }) {\n\t\tif (options.merge) {\n\t\t\tif (!base.accessor()) throw new Error(`Set an accessor to ${ALGORITHM_TYPE} before calculating`);\n\t\t\treturn mergedAlgorithm(data);\n\t\t}\n\t\treturn underlyingAlgorithm(data);\n\t};\n\n\trebind(indicator, base, \"accessor\", \"stroke\", \"fill\", \"echo\", \"type\");\n\t// rebind(indicator, underlyingAlgorithm, \"windowSize\", \"source\");\n\trebind(indicator, mergedAlgorithm, \"merge\");\n\n\treturn indicator;\n}\n"]}