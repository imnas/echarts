{"version":3,"sources":["../../../../src/lib/series/ScatterSeries.js"],"names":["React","Component","PropTypes","nest","d3Nest","GenericChartComponent","getAxisCanvas","hexToRGBA","functor","ScatterSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","points","helper","className","markerProps","map","point","idx","Marker","marker","propTypes","string","yAccessor","func","isRequired","markerProvider","object","defaultProps","xScale","yScale","chartConfig","plotData","Error","d","mProps","fill","stroke","x","y","opacity","datum","key","entries","forEach","fillKey","fillGroup","fillValues","values","fillStyle","strokeValues","strokeGroup"],"mappings":"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","file":"ScatterSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nest as d3Nest } from \"d3-collection\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { hexToRGBA, functor } from \"../utils\";\n\nclass ScatterSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst points = helper(this.props, moreProps, xAccessor);\n\n\t\tdrawOnCanvas(ctx, this.props, points);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, markerProps } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst points = helper(this.props, moreProps, xAccessor);\n\n\t\treturn <g className={className}>\n\t\t\t{points.map((point, idx) => {\n\t\t\t\tconst { marker: Marker } = point;\n\t\t\t\treturn <Marker key={idx} {...markerProps} point={point} />;\n\t\t\t})}\n\t\t</g>;\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nScatterSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tyAccessor: PropTypes.func.isRequired,\n\tmarker: PropTypes.func,\n\tmarkerProvider: PropTypes.func,\n\tmarkerProps: PropTypes.object,\n};\n\nScatterSeries.defaultProps = {\n\tclassName: \"react-stockcharts-scatter\",\n};\n\nfunction helper(props, moreProps, xAccessor) {\n\tconst { yAccessor, markerProvider, markerProps } = props;\n\tlet { marker: Marker } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tif (!(markerProvider || Marker)) throw new Error(\"required prop, either marker or markerProvider missing\");\n\n\treturn plotData.map(d => {\n\n\t\tif (markerProvider) Marker = markerProvider(d);\n\n\t\tconst mProps = { ...Marker.defaultProps, ...markerProps };\n\n\t\tconst fill = functor(mProps.fill);\n\t\tconst stroke = functor(mProps.stroke);\n\n\t\treturn {\n\t\t\tx: xScale(xAccessor(d)),\n\t\t\ty: yScale(yAccessor(d)),\n\t\t\tfill: hexToRGBA(fill(d), mProps.opacity),\n\t\t\tstroke: stroke(d),\n\t\t\tdatum: d,\n\t\t\tmarker: Marker,\n\t\t};\n\t});\n}\n\nfunction drawOnCanvas(ctx, props, points) {\n\n\tconst { markerProps } = props;\n\n\tconst nest = d3Nest()\n\t\t.key(d => d.fill)\n\t\t.key(d => d.stroke)\n\t\t.entries(points);\n\n\tnest.forEach(fillGroup => {\n\t\tconst { key: fillKey, values: fillValues } = fillGroup;\n\n\t\tif (fillKey !== \"none\") {\n\t\t\tctx.fillStyle = fillKey;\n\t\t}\n\n\t\tfillValues.forEach(strokeGroup => {\n\t\t\t// var { key: strokeKey, values: strokeValues } = strokeGroup;\n\t\t\tconst { values: strokeValues } = strokeGroup;\n\n\t\t\tstrokeValues.forEach(point => {\n\t\t\t\tconst { marker } = point;\n\t\t\t\tmarker.drawOnCanvas({ ...marker.defaultProps, ...markerProps, fill: fillKey }, point, ctx);\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport default ScatterSeries;\n"]}