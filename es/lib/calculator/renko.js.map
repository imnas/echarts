{"version":3,"sources":["../../../../src/lib/calculator/renko.js"],"names":["merge","isNotDefined","functor","atr","Renko","defaultOptions","options","dateAccessor","d","date","dateMutator","calculator","rawData","reversalType","fixedBrickSize","sourcePath","windowSize","source","high","low","close","pricingMethod","brickSize","atrAlgorithm","atrCalculator","algorithm","c","renkoData","index","prevBrickClose","open","prevBrickOpen","brick","direction","forEach","idx","from","startOfYear","startOfQuarter","startOfMonth","startOfWeek","fromDate","volume","prevCloseToHigh","prevCloseToLow","prevOpenToHigh","prevOpenToLow","priceMovement","Math","min","abs","max","noOfBricks","floor","j","to","toDate","fullyFormed","push","newBrick","length","x","arguments"],"mappings":"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","file":"renko.js","sourcesContent":["\"use strict\";\n\nimport { merge, isNotDefined, functor } from \"../utils\";\n\nimport atr from \"./atr\";\n\nimport { Renko as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport default function() {\n\tlet options = defaultOptions;\n\n\tlet dateAccessor = d => d.date;\n\tlet dateMutator = (d, date) => { d.date = date; };\n\n\tfunction calculator(rawData) {\n\t\tconst { reversalType, fixedBrickSize, sourcePath, windowSize } = options;\n\n\t\tconst source = sourcePath === \"high/low\"\n\t\t\t? d => { return { high: d.high, low: d.low }; }\n\t\t\t: d => { return { high: d.close, low: d.close }; };\n\n\t\tconst pricingMethod = source;\n\t\tlet brickSize;\n\n\t\tif (reversalType === \"ATR\") {\n\t\t\t// calculateATR(rawData, period);\n\t\t\tconst atrAlgorithm = atr().options({ windowSize });\n\n\t\t\tconst atrCalculator = merge()\n\t\t\t\t.algorithm(atrAlgorithm)\n\t\t\t\t.merge((d, c) => { d[\"atr\" + windowSize] = c; } );\n\n\t\t\tatrCalculator(rawData);\n\t\t\tbrickSize = d => d[\"atr\" + windowSize];\n\t\t} else {\n\t\t\tbrickSize = functor(fixedBrickSize);\n\t\t}\n\n\t\tconst renkoData = [];\n\n\t\tlet index = 0, prevBrickClose = rawData[index].open, prevBrickOpen = rawData[index].open;\n\t\tlet brick = {}, direction = 0;\n\n\t\trawData.forEach(function(d, idx) {\n\t\t\tif (isNotDefined(brick.from)) {\n\t\t\t\tbrick.high = d.high;\n\t\t\t\tbrick.low = d.low;\n\t\t\t\tbrick.startOfYear = d.startOfYear;\n\t\t\t\tbrick.startOfQuarter = d.startOfQuarter;\n\t\t\t\tbrick.startOfMonth = d.startOfMonth;\n\t\t\t\tbrick.startOfWeek = d.startOfWeek;\n\n\t\t\t\tbrick.from = idx;\n\t\t\t\tbrick.fromDate = dateAccessor(d);\n\t\t\t\t// indexMutator(brick, index++);\n\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t}\n\t\t\tbrick.volume = (brick.volume || 0) + d.volume;\n\n\t\t\tconst prevCloseToHigh = (prevBrickClose - pricingMethod(d).high),\n\t\t\t\tprevCloseToLow = (prevBrickClose - pricingMethod(d).low),\n\t\t\t\tprevOpenToHigh = (prevBrickOpen - pricingMethod(d).high),\n\t\t\t\tprevOpenToLow = (prevBrickOpen - pricingMethod(d).low),\n\t\t\t\tpriceMovement = Math.min(\n\t\t\t\t\tMath.abs(prevCloseToHigh),\n\t\t\t\t\tMath.abs(prevCloseToLow),\n\t\t\t\t\tMath.abs(prevOpenToHigh),\n\t\t\t\t\tMath.abs(prevOpenToLow));\n\n\n\t\t\tbrick.high = Math.max(brick.high, d.high);\n\t\t\tbrick.low = Math.min(brick.low, d.low);\n\n\t\t\tif (!brick.startOfYear) {\n\t\t\t\tbrick.startOfYear = d.startOfYear;\n\t\t\t\tif (brick.startOfYear) {\n\t\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t\t\t// brick.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!brick.startOfQuarter) {\n\t\t\t\tbrick.startOfQuarter = d.startOfQuarter;\n\t\t\t\tif (brick.startOfQuarter && !brick.startOfYear) {\n\t\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t\t\t// brick.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!brick.startOfMonth) {\n\t\t\t\tbrick.startOfMonth = d.startOfMonth;\n\t\t\t\tif (brick.startOfMonth && !brick.startOfQuarter) {\n\t\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t\t\t// brick.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!brick.startOfWeek) {\n\t\t\t\tbrick.startOfWeek = d.startOfWeek;\n\t\t\t\tif (brick.startOfWeek && !brick.startOfMonth) {\n\t\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t\t\t// brick.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// d.brick = JSON.stringify(brick);\n\t\t\tif (brickSize(d)) {\n\t\t\t\tconst noOfBricks = Math.floor(priceMovement / brickSize(d));\n\n\t\t\t\tbrick.open = (Math.abs(prevCloseToHigh) < Math.abs(prevOpenToHigh)\n\t\t\t\t\t|| Math.abs(prevCloseToLow) < Math.abs(prevOpenToLow))\n\t\t\t\t\t? prevBrickClose\n\t\t\t\t\t: prevBrickOpen;\n\n\t\t\t\tif (noOfBricks >= 1) {\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tfor (j = 0; j < noOfBricks; j++) {\n\t\t\t\t\t\tbrick.close = (brick.open < pricingMethod(d).high)\n\t\t\t\t\t\t\t// if brick open is less than current price it means it is green/hollow brick\n\t\t\t\t\t\t\t? brick.open + brickSize(d)\n\t\t\t\t\t\t\t: brick.open - brickSize(d);\n\t\t\t\t\t\tdirection = brick.close > brick.open ? 1 : -1;\n\t\t\t\t\t\tbrick.direction = direction;\n\t\t\t\t\t\tbrick.to = idx;\n\t\t\t\t\t\tbrick.toDate = dateAccessor(d);\n\t\t\t\t\t\t// brick.diff = brick.open - brick.close;\n\t\t\t\t\t\t// brick.atr = d.atr;\n\t\t\t\t\t\tbrick.fullyFormed = true;\n\t\t\t\t\t\trenkoData.push(brick);\n\n\t\t\t\t\t\tprevBrickClose = brick.close;\n\t\t\t\t\t\tprevBrickOpen = brick.open;\n\n\t\t\t\t\t\tconst newBrick = {\n\t\t\t\t\t\t\thigh: brick.high,\n\t\t\t\t\t\t\tlow: brick.low,\n\t\t\t\t\t\t\topen: brick.close,\n\t\t\t\t\t\t\tstartOfYear: false,\n\t\t\t\t\t\t\tstartOfMonth: false,\n\t\t\t\t\t\t\tstartOfQuarter: false,\n\t\t\t\t\t\t\tstartOfWeek: false\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbrick = newBrick;\n\t\t\t\t\t\tbrick.from = idx;\n\t\t\t\t\t\tbrick.fromDate = dateAccessor(d);\n\t\t\t\t\t\t// indexMutator(brick, index + j);\n\t\t\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t\t\t\tbrick.volume = (brick.volume || 0) + d.volume;\n\t\t\t\t\t}\n\t\t\t\t\tindex = index + j - 1;\n\t\t\t\t\tbrick = {};\n\t\t\t\t} else {\n\t\t\t\t\tif (idx === rawData.length - 1) {\n\t\t\t\t\t\tbrick.close = direction > 0 ? pricingMethod(d).high : pricingMethod(d).low;\n\t\t\t\t\t\tbrick.to = idx;\n\t\t\t\t\t\tbrick.toDate = dateAccessor(d);\n\t\t\t\t\t\tdateMutator(brick, dateAccessor(d));\n\t\t\t\t\t\tbrick.fullyFormed = false;\n\t\t\t\t\t\trenkoData.push(brick);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t\treturn renkoData;\n\n\t}\n\tcalculator.options = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn options;\n\t\t}\n\t\toptions = { ...defaultOptions, ...x };\n\t\treturn calculator;\n\t};\n\n\tcalculator.dateMutator = function(x) {\n\t\tif (!arguments.length) return dateMutator;\n\t\tdateMutator = x;\n\t\treturn calculator;\n\t};\n\tcalculator.dateAccessor = function(x) {\n\t\tif (!arguments.length) return dateAccessor;\n\t\tdateAccessor = x;\n\t\treturn calculator;\n\t};\n\n\treturn calculator;\n}\n"]}