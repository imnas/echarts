{"version":3,"sources":["../../../../src/lib/interactive/Brush.js"],"names":["React","Component","PropTypes","isDefined","noop","getStrokeDasharray","hexToRGBA","GenericChartComponent","getMouseCanvas","Brush","props","context","handleZoomStart","bind","handleDrawSquare","handleZoomComplete","drawOnCanvas","renderSVG","saveNode","terminate","state","rect","zoomHappening","setState","x1y1","start","end","node","ctx","x","y","height","width","stroke","fill","strokeDashArray","strokeOpacity","fillOpacity","dashArray","split","map","d","strokeStyle","fillStyle","setLineDash","beginPath","fillRect","strokeRect","moreProps","mouseXY","mouseY","currentItem","yScale","chartConfig","xAccessor","xScale","selected","item","xValue","yValue","invert","x2","y2","x1","y1","Math","min","abs","onBrush","enabled","propTypes","bool","isRequired","onStart","func","type","oneOf","string","number","interactiveState","object","defaultProps"],"mappings":"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","file":"Brush.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n\tisDefined,\n\tnoop,\n\tgetStrokeDasharray,\n\thexToRGBA,\n} from \"../utils\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nclass Brush extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.handleZoomStart = this.handleZoomStart.bind(this);\n\t\tthis.handleDrawSquare = this.handleDrawSquare.bind(this);\n\t\tthis.handleZoomComplete = this.handleZoomComplete.bind(this);\n\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\t\tthis.terminate = this.terminate.bind(this);\n\t\tthis.state = {\n\t\t\trect: null,\n\t\t};\n\t}\n\tterminate() {\n\t\tthis.zoomHappening = false;\n\t\tthis.setState({\n\t\t\tx1y1: null,\n\t\t\tstart: null,\n\t\t\tend: null,\n\t\t\trect: null,\n\t\t});\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tdrawOnCanvas(ctx) {\n\t\tconst { rect } = this.state;\n\t\tif (isDefined(rect)) {\n\t\t\tconst { x, y, height, width } = rect;\n\t\t\tconst { stroke, fill, strokeDashArray } = this.props;\n\t\t\tconst { strokeOpacity, fillOpacity } = this.props;\n\n\t\t\tconst dashArray = getStrokeDasharray(strokeDashArray)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(d => +d);\n\n\t\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\t\tctx.setLineDash(dashArray);\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x, y, width, height);\n\t\t\tctx.strokeRect(x, y, width, height);\n\t\t}\n\t}\n\trenderSVG() {\n\t\tconst { rect } = this.state;\n\t\tif (isDefined(rect)) {\n\t\t\tconst { x, y, height, width } = rect;\n\t\t\tconst { stroke, strokeDashArray } = this.props;\n\t\t\tconst { strokeOpacity, fillOpacity } = this.props;\n\n\t\t\tconst dashArray = getStrokeDasharray(strokeDashArray)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(d => +d);\n\n\t\t\treturn (\n\t\t\t\t<rect strokeDasharray={dashArray}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t\tx={x}\n\t\t\t\t\ty={y}\n\t\t\t\t\twidth={width}\n\t\t\t\t\theight={height}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\thandleZoomStart(moreProps) {\n\t\tthis.zoomHappening = false;\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tcurrentItem,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst x1y1 = [\n\t\t\txScale(xAccessor(currentItem)),\n\t\t\tmouseY\n\t\t];\n\n\t\tthis.setState({\n\t\t\tselected: true,\n\t\t\tx1y1,\n\t\t\tstart: {\n\t\t\t\titem: currentItem,\n\t\t\t\txValue: xAccessor(currentItem),\n\t\t\t\tyValue: yScale.invert(mouseY),\n\t\t\t},\n\t\t});\n\t}\n\thandleDrawSquare(moreProps) {\n\t\tif (this.state.x1y1 == null) return;\n\n\t\tthis.zoomHappening = true;\n\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tcurrentItem,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst [x2, y2] = [\n\t\t\txScale(xAccessor(currentItem)),\n\t\t\tmouseY\n\t\t];\n\n\t\tconst { x1y1: [x1, y1] } = this.state;\n\n\t\tconst x = Math.min(x1, x2);\n\t\tconst y = Math.min(y1, y2);\n\t\tconst height = Math.abs(y2 - y1);\n\t\tconst width = Math.abs(x2 - x1);\n\n\t\tthis.setState({\n\t\t\tselected: true,\n\t\t\tend: {\n\t\t\t\titem: currentItem,\n\t\t\t\txValue: xAccessor(currentItem),\n\t\t\t\tyValue: yScale.invert(mouseY),\n\t\t\t},\n\t\t\trect: {\n\t\t\t\tx, y, height, width\n\t\t\t},\n\t\t});\n\t}\n\thandleZoomComplete(moreProps) {\n\t\tif (this.zoomHappening) {\n\t\t\tconst { onBrush } = this.props;\n\t\t\tconst { start, end } = this.state;\n\t\t\tonBrush({ start, end }, moreProps);\n\t\t}\n\t\tthis.setState({\n\t\t\tselected: false,\n\t\t\trect: null,\n\t\t});\n\t}\n\trender() {\n\t\tconst { enabled } = this.props;\n\t\tif (!enabled) return null;\n\n\t\treturn (\n\t\t\t<GenericChartComponent\n\t\t\t\tref={this.saveNode}\n\t\t\t\tdisablePan={enabled}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\t\tonMouseDown={this.handleZoomStart}\n\t\t\t\tonMouseMove={this.handleDrawSquare}\n\t\t\t\tonClick={this.handleZoomComplete}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nBrush.propTypes = {\n\tenabled: PropTypes.bool.isRequired,\n\tonStart: PropTypes.func.isRequired,\n\tonBrush: PropTypes.func.isRequired,\n\n\ttype: PropTypes.oneOf([\"1D\", \"2D\"]),\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string,\n\tstrokeOpacity: PropTypes.number,\n\tfillOpacity: PropTypes.number,\n\tinteractiveState: PropTypes.object,\n\tstrokeDashArray: PropTypes.string,\n};\n\nBrush.defaultProps = {\n\ttype: \"2D\",\n\tstroke: \"#000000\",\n\tfillOpacity: 0.3,\n\tstrokeOpacity: 1,\n\tfill: \"#3h3h3h\",\n\tonBrush: noop,\n\tonStart: noop,\n\tstrokeDashArray: \"ShortDash\",\n};\n\nexport default Brush;\n"]}